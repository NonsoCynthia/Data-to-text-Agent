{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. You can be provided data in the form of xml, table, meaning representations, graphs etc. \nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\nHere is the data generate text using table data:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]",
    "final_response": "The Wrestlers is a restaurant that serves Italian cuisine. Located by the riverside, it offers moderately priced dishes. The establishment is also family friendly, making it a suitable choice for diners of all ages.",
    "raw_data": "[['The Wrestlers', 'eatType', 'restaurant'], ['The Wrestlers', 'food', 'Italian'], ['The Wrestlers', 'priceRange', 'moderate'], ['The Wrestlers', 'area', 'riverside'], ['The Wrestlers', 'familyFriendly', 'yes']]",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. You can be provided data in the form of xml, table, meaning representations, graphs etc. \nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\nHere is the data generate text using table data:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 100,
    "current_step": 0,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: \nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. You can be provided data in the form of xml, table, meaning representations, graphs etc. \nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\nHere is the data generate text using table data:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\n\n\n\nGUARDRAIL FEEDBACK: \n\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. You can be provided data in the form of xml, table, meaning representations, graphs etc. \nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\nHere is the data generate text using table data:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\nFEEDBACK: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='Please reorder the following facts into a natural and reader-friendly flow for describing The Wrestlers. Group related facts, start with general aspects (such as type and name), and move to more specific details.\n\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]')",
            "rationale": "The initial task requires the information to be organized for natural verbalization. Since this is the first step, I need to reorder the facts for clarity: start with the general information (type and name of establishment), then mention the cuisine, price, location, and finally specify family friendliness. This sequence follows a natural introduction to such an establishment. I will proceed with content ordering."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "Please reorder the following facts into a natural and reader-friendly flow for describing The Wrestlers. Group related facts, start with general aspects (such as type and name), and move to more specific details.\n\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]",
            "agent_output": [
                "Eat Type (The Wrestlers): restaurant",
                "Food (The Wrestlers): Italian",
                "Area (The Wrestlers): riverside",
                "Price Range (The Wrestlers): moderate",
                "Family Friendly (The Wrestlers): yes"
            ],
            "rationale": [
                "Eat Type (The Wrestlers): restaurant",
                "Food (The Wrestlers): Italian",
                "Area (The Wrestlers): riverside",
                "Price Range (The Wrestlers): moderate",
                "Family Friendly (The Wrestlers): yes"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Worker: content ordering\n\n                Worker Description: You are the 'content ordering' agent in a structured data-to-text pipeline.\n\n*** Task ***\nYour job is to reorder a list of extracted facts so that they reflect the most natural and coherent flow for verbalizing the final text. You arrange information in the input in their most appropriate sequences in the final text.\n\n*** Input Format ***\nYou will receive a flat list of attribute-value strings, each formatted as:\n\"Attribute (Entity): Value\"\n\n*** Instructions ***\n- Imagine you already know how the final generated text should sound. Use this mental model of the final text to guide the most natural sequence for the data.\n- Reorder the facts to follow a logical and reader-friendly progression.\n- Do not alter, omit, rephrase, or invent any content.\n- Keep each entry strictly in the format: \"Attribute (Entity): Value\".\n- Prefer grouping related facts under the same entity.\n- Within each group, order facts from general/background (e.g., team, position) to detailed performance or event-specific facts (e.g., points, assists).\n- Also consider the instructions from the user if any.\n\n*** Output Format ***\nReturn a reordered list of the input strings, preserving the exact original format: \"Attribute (Entity): Value\".\n\n                Orchestrator Thought: The initial task requires the information to be organized for natural verbalization. Since this is the first step, I need to reorder the facts for clarity: start with the general information (type and name of establishment), then mention the cuisine, price, location, and finally specify family friendliness. This sequence follows a natural introduction to such an establishment. I will proceed with content ordering.\n\n                Worker Input: Please reorder the following facts into a natural and reader-friendly flow for describing The Wrestlers. Group related facts, start with general aspects (such as type and name), and move to more specific details.\n\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\n\n                Worker Output: ['Eat Type (The Wrestlers): restaurant', 'Food (The Wrestlers): Italian', 'Area (The Wrestlers): riverside', 'Price Range (The Wrestlers): moderate', 'Family Friendly (The Wrestlers): yes']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: \nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. You can be provided data in the form of xml, table, meaning representations, graphs etc. \nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\nHere is the data generate text using table data:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\n\nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='Please reorder the following facts into a natural and reader-friendly flow for describing The Wrestlers. Group related facts, start with general aspects (such as type and name), and move to more specific details.\n\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:WORKER_2 ===##\n-- AGENT TYPE: worker\n-- AGENT NAME: content ordering\n-- INPUT START --\nPlease reorder the following facts into a natural and reader-friendly flow for describing The Wrestlers. Group related facts, start with general aspects (such as type and name), and move to more specific details.\n\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\n-- INPUT END --\n-- OUTPUT START --\n['Eat Type (The Wrestlers): restaurant', 'Food (The Wrestlers): Italian', 'Area (The Wrestlers): riverside', 'Price Range (The Wrestlers): moderate', 'Family Friendly (The Wrestlers): yes']\n-- OUTPUT END --\n##=== END:WORKER_2 ===##\n\nGUARDRAIL FEEDBACK: \n\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. You can be provided data in the form of xml, table, meaning representations, graphs etc. \nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\nHere is the data generate text using table data:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='Please take the following ordered facts for the entity 'The Wrestlers' and group them into sentence-level units using <snt> tags and paragraph-level units using <paragraph> tags, according to how they would naturally be expressed in text. Group related facts that would appear in the same sentence for fluency, and ensure the output is structured for a human-like verbalization. \n\nOrdered facts:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Area (The Wrestlers): riverside\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Family Friendly (The Wrestlers): yes\"\n]')",
            "rationale": "The content ordering step has been completed correctly, as confirmed by the guardrail feedback. The next step is to assign the task to the 'text structuring' agent, instructing it to group the ordered facts into coherent sentence and paragraph units with <snt> and <paragraph> tags, following the structure guidelines."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "Please take the following ordered facts for the entity 'The Wrestlers' and group them into sentence-level units using <snt> tags and paragraph-level units using <paragraph> tags, according to how they would naturally be expressed in text. Group related facts that would appear in the same sentence for fluency, and ensure the output is structured for a human-like verbalization. \n\nOrdered facts:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Area (The Wrestlers): riverside\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Family Friendly (The Wrestlers): yes\"\n]",
            "agent_output": "<paragraph>\n<snt>\nEat Type (The Wrestlers): restaurant  \nFood (The Wrestlers): Italian\n</snt>\n<snt>\nArea (The Wrestlers): riverside  \nPrice Range (The Wrestlers): moderate\n</snt>\n<snt>\nFamily Friendly (The Wrestlers): yes\n</snt>\n</paragraph>",
            "rationale": "<paragraph>\n<snt>\nEat Type (The Wrestlers): restaurant  \nFood (The Wrestlers): Italian\n</snt>\n<snt>\nArea (The Wrestlers): riverside  \nPrice Range (The Wrestlers): moderate\n</snt>\n<snt>\nFamily Friendly (The Wrestlers): yes\n</snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Worker: text structuring\n\n                Worker Description: You are the 'text structuring' agent in a structured data-to-text pipeline.\n\n*** Task ***\nYour job is to group a list of ordered facts into coherent sentence-level and paragraph-level units that reflect how the final text should be verbalized. You organise the information into separate sentences and paragraphs, using <snt> and <paragraph> tags.\n\n*** Input Format ***\nYou will receive a list of strings in the format:\n\"Attribute (Entity): Value\"\n\n*** Instructions ***\n- Imagine how a human would naturally express these facts in text.\n- Group related facts that would logically appear in the same sentence using <snt> ... </snt> tags.\n- For long-form text, organize related <snt> groups that belong in the same paragraph within <paragraph> ... </paragraph> tags.\n- Preserve the sequence and exact wording of each item.\n- Do not delete, rephrase, hallucinate, or change any content.\n- Do not modify the format of individual facts\u2014only organize them with tags.\n- Prefer grouping facts under the same entity and follow the natural flow of how such information would be conveyed in writing.\n- Maintain one <snt> block per logical sentence and one <paragraph> block per thematically related group of sentences.\n- For long-form text, use 1\u20133 <paragraph> blocks. For short text, use 1 paragraph only.\n- Within each paragraph, must include multiple sentences enclosed in <snt> tags.\n- Also consider the instructions from the user if any.\n \n\n*** Output Format ***\nReturn the list of original strings organized with nested structure, like:\n\n```<paragraph>\n<snt>\nAttribute (Entity): Value  \nAttribute (Entity): Value\n... \n</snt>\n<snt>\nAttribute (Entity): Value  \nAttribute (Entity): Value\n... \n</snt>\n...\n</paragraph>\n\n<paragraph>\n<snt>\nAttribute (Entity): Value  \nAttribute (Entity): Value\n... \n</snt>\n<snt>\nAttribute (Entity): Value  \nAttribute (Entity): Value\n... \n</snt>\n</paragraph>\n\n...\n```\n\n                Orchestrator Thought: The content ordering step has been completed correctly, as confirmed by the guardrail feedback. The next step is to assign the task to the 'text structuring' agent, instructing it to group the ordered facts into coherent sentence and paragraph units with <snt> and <paragraph> tags, following the structure guidelines.\n\n                Worker Input: Please take the following ordered facts for the entity 'The Wrestlers' and group them into sentence-level units using <snt> tags and paragraph-level units using <paragraph> tags, according to how they would naturally be expressed in text. Group related facts that would appear in the same sentence for fluency, and ensure the output is structured for a human-like verbalization. \n\nOrdered facts:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Area (The Wrestlers): riverside\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\n\n                Worker Output: <paragraph>\n<snt>\nEat Type (The Wrestlers): restaurant  \nFood (The Wrestlers): Italian\n</snt>\n<snt>\nArea (The Wrestlers): riverside  \nPrice Range (The Wrestlers): moderate\n</snt>\n<snt>\nFamily Friendly (The Wrestlers): yes\n</snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: \nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. You can be provided data in the form of xml, table, meaning representations, graphs etc. \nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\nHere is the data generate text using table data:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\n\nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='Please reorder the following facts into a natural and reader-friendly flow for describing The Wrestlers. Group related facts, start with general aspects (such as type and name), and move to more specific details.\n\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:WORKER_2 ===##\n-- AGENT TYPE: worker\n-- AGENT NAME: content ordering\n-- INPUT START --\nPlease reorder the following facts into a natural and reader-friendly flow for describing The Wrestlers. Group related facts, start with general aspects (such as type and name), and move to more specific details.\n\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\n-- INPUT END --\n-- OUTPUT START --\n['Eat Type (The Wrestlers): restaurant', 'Food (The Wrestlers): Italian', 'Area (The Wrestlers): riverside', 'Price Range (The Wrestlers): moderate', 'Family Friendly (The Wrestlers): yes']\n-- OUTPUT END --\n##=== END:WORKER_2 ===##\n\n##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='Please take the following ordered facts for the entity 'The Wrestlers' and group them into sentence-level units using <snt> tags and paragraph-level units using <paragraph> tags, according to how they would naturally be expressed in text. Group related facts that would appear in the same sentence for fluency, and ensure the output is structured for a human-like verbalization. \n\nOrdered facts:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Area (The Wrestlers): riverside\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Family Friendly (The Wrestlers): yes\"\n]')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:WORKER_4 ===##\n-- AGENT TYPE: worker\n-- AGENT NAME: text structuring\n-- INPUT START --\nPlease take the following ordered facts for the entity 'The Wrestlers' and group them into sentence-level units using <snt> tags and paragraph-level units using <paragraph> tags, according to how they would naturally be expressed in text. Group related facts that would appear in the same sentence for fluency, and ensure the output is structured for a human-like verbalization. \n\nOrdered facts:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Area (The Wrestlers): riverside\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n<snt>\nEat Type (The Wrestlers): restaurant  \nFood (The Wrestlers): Italian\n</snt>\n<snt>\nArea (The Wrestlers): riverside  \nPrice Range (The Wrestlers): moderate\n</snt>\n<snt>\nFamily Friendly (The Wrestlers): yes\n</snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:WORKER_4 ===##\n\nGUARDRAIL FEEDBACK: \n\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. You can be provided data in the form of xml, table, meaning representations, graphs etc. \nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\nHere is the data generate text using table data:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='Please convert the grouped and tagged content below into a single well-written paragraph. Ensure each <snt> block is realized as one fluent sentence, covering all provided facts without omission or invention. Maintain appropriate tone and cohesion across the paragraph.\n\n<paragraph>\n<snt>\nEat Type (The Wrestlers): restaurant  \nFood (The Wrestlers): Italian\n</snt>\n<snt>\nArea (The Wrestlers): riverside  \nPrice Range (The Wrestlers): moderate\n</snt>\n<snt>\nFamily Friendly (The Wrestlers): yes\n</snt>\n</paragraph>')",
            "rationale": "The previous step (text structuring) has correctly grouped the facts related to The Wrestlers into sentences and a paragraph with appropriate <snt> and <paragraph> tags. Now, it is time for surface realization: transforming these structured groupings into coherent, fluent, human-like text without omitting or hallucinating any facts. The output must consist of a single cohesive paragraph with three sentences, faithfully covering every provided fact."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "Please convert the grouped and tagged content below into a single well-written paragraph. Ensure each <snt> block is realized as one fluent sentence, covering all provided facts without omission or invention. Maintain appropriate tone and cohesion across the paragraph.\n\n<paragraph>\n<snt>\nEat Type (The Wrestlers): restaurant  \nFood (The Wrestlers): Italian\n</snt>\n<snt>\nArea (The Wrestlers): riverside  \nPrice Range (The Wrestlers): moderate\n</snt>\n<snt>\nFamily Friendly (The Wrestlers): yes\n</snt>\n</paragraph>",
            "agent_output": "The Wrestlers is a restaurant that serves Italian cuisine. Located by the riverside, it offers moderately priced dishes. The establishment is also family friendly, making it a suitable choice for diners of all ages.",
            "rationale": "The Wrestlers is a restaurant that serves Italian cuisine. Located by the riverside, it offers moderately priced dishes. The establishment is also family friendly, making it a suitable choice for diners of all ages."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Worker: surface realization\n\n                Worker Description: You are the 'surface realization' agent in a structured data-to-text generation pipeline.\n\n*** Task ***\nYour job is to transform structured content \u2014 grouped using <snt> and optionally <paragraph> tags \u2014 into fluent, accurate, and human-like natural language text.\n\nThis input may come from structured formats such as XML, tables, or subject\u2013predicate\u2013object (SPO) triples, and has already been organized into sentence-level (<snt>) and paragraph-level (<paragraph>) units for you.\n\n*** Your Objectives ***\n- Produce well-written paragraph(s) that preserve the paragraph-level groupings.\n- Ensure each <snt> block becomes a natural, well-formed sentence.\n- When <paragraph> tags are present, generate smooth, cohesive multi-sentence paragraphs \u2014 one per <paragraph> block.\n- Your output should resemble human-authored articles or descriptions, not rigid templates.\n\n*** Writing Guidelines ***\n1. **Preserve All Factual Content**\n   - Include every fact encoded in the input \u2014 no omissions, no hallucinations.\n   - Maintain factual faithfulness even if you paraphrase.\n   - Never add external information or assumptions.\n\n2. **Generate Fluent and Coherent Text**\n   - Transform the contents of each <snt> into one fluent sentence.\n   - Vary sentence structure and connect ideas naturally.\n   - Use pronouns or descriptive references to avoid repeating the same entity names.\n   - Use smooth transitions within and between sentences in the same paragraph.\n\n3. **Respect Structure But Prioritize Readability**\n   - Maintain one paragraph per <paragraph> block \u2014 do not merge or collapse them.\n   - Do not split, merge, or discard any <snt> content.\n   - While respecting sentence and paragraph boundaries, you may reorder facts within a paragraph slightly to improve narrative flow.\n\n4. **Maintain Appropriate Tone and Style**\n   - Write in third-person, formal, and informative style.\n   - Avoid bullet points, lists, or structured representations.\n   - Your output must sound like it was written by a professional writer or editor.\n\n*** Input Format ***\nYou will receive content similar to this:\n```<paragraph>\n<snt>\nAttribute (Entity): Value  \nAttribute (Entity): Value\n</snt>\n<snt>\nAttribute (Entity): Value\n</snt>\n</paragraph> ...```\n\n*** Output Instructions ***\n- Convert each <snt> into a fluent sentence.\n- Combine all sentences inside a <paragraph> block into a single cohesive paragraph.\n- Do NOT include <snt> or <paragraph> tags in your output.\n- Ensure clarity, grammatical correctness, and full factual coverage.\n- Avoid excessive repetition or mechanical phrasing.\n\n*** What to Avoid ***\n- Copying facts verbatim from the input\n- Adding any information not explicitly present in the data\n- Ignoring or merging paragraph-level structure\n- Generating one isolated sentence per fact\n- Including tag markers or structured formatting\n\n*** Output Format ***\n- Output should be fluent, factually complete text consisting of multiple coherent paragraphs (if <paragraph> tags are present).\n- If only <snt> blocks are present, return a sentence per <snt>, separated by line breaks or formatted as flowing text.\n- The final result must be grammatically sound, semantically accurate, and naturally readable.\n\n                Orchestrator Thought: The previous step (text structuring) has correctly grouped the facts related to The Wrestlers into sentences and a paragraph with appropriate <snt> and <paragraph> tags. Now, it is time for surface realization: transforming these structured groupings into coherent, fluent, human-like text without omitting or hallucinating any facts. The output must consist of a single cohesive paragraph with three sentences, faithfully covering every provided fact.\n\n                Worker Input: Please convert the grouped and tagged content below into a single well-written paragraph. Ensure each <snt> block is realized as one fluent sentence, covering all provided facts without omission or invention. Maintain appropriate tone and cohesion across the paragraph.\n\n<paragraph>\n<snt>\nEat Type (The Wrestlers): restaurant  \nFood (The Wrestlers): Italian\n</snt>\n<snt>\nArea (The Wrestlers): riverside  \nPrice Range (The Wrestlers): moderate\n</snt>\n<snt>\nFamily Friendly (The Wrestlers): yes\n</snt>\n</paragraph>\n\n                Worker Output: The Wrestlers is a restaurant that serves Italian cuisine. Located by the riverside, it offers moderately priced dishes. The establishment is also family friendly, making it a suitable choice for diners of all ages.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. You can be provided data in the form of xml, table, meaning representations, graphs etc. \nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\nHere is the data generate text using table data:\n[\n  \"Eat Type (The Wrestlers): restaurant\",\n  \"Food (The Wrestlers): Italian\",\n  \"Price Range (The Wrestlers): moderate\",\n  \"Area (The Wrestlers): riverside\",\n  \"Family Friendly (The Wrestlers): yes\"\n]",
            "agent_output": "The Wrestlers is a restaurant that serves Italian cuisine. Located by the riverside, it offers moderately priced dishes. The establishment is also family friendly, making it a suitable choice for diners of all ages.",
            "rationale": null
        }
    ]
}