{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\nOutput: ",
    "final_response": "Bedford Aerodrome has the ICAO location identifier EGBF, and its runway surface type is concrete.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about Bedford Aerodrome into a logical order for a coherent narrative. Ensure both facts are included and no information is omitted or invented.', instruction='- Review the two facts about Bedford Aerodrome.\n- Decide on the most logical order for presenting these facts in a short, coherent text (e.g., identifier first, then runway type, or vice versa).\n- Output the ordered list of facts, ready for the next stage (Text Structuring).\n- Do not omit any information or add any new facts.')",
            "rationale": "The user has provided two RDF triples about Bedford Aerodrome: its ICAO location identifier (EGBF) and its runway surface type (Concrete). According to the workflow, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should ensure both facts are included and logically ordered, with no omissions or hallucinations. \nInstruction:\n- Review the two facts about Bedford Aerodrome.\n- Decide on the most logical order for presenting these facts in a short, coherent text (e.g., identifier first, then runway type, or vice versa).\n- Output the ordered list of facts, ready for the next stage (Text Structuring).\n- Do not omit any information or add any new facts."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about Bedford Aerodrome into a logical order for a coherent narrative. Ensure both facts are included and no information is omitted or invented. \nAdditional Instruction: - Review the two facts about Bedford Aerodrome.\n- Decide on the most logical order for presenting these facts in a short, coherent text (e.g., identifier first, then runway type, or vice versa).\n- Output the ordered list of facts, ready for the next stage (Text Structuring).\n- Do not omit any information or add any new facts.",
            "agent_output": [
                "Bedford_Aerodrome | icaoLocationIdentifier | EGBF",
                "Bedford_Aerodrome | runwaySurfaceType | Concrete"
            ],
            "rationale": [
                "Bedford_Aerodrome | icaoLocationIdentifier | EGBF",
                "Bedford_Aerodrome | runwaySurfaceType | Concrete"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided two RDF triples about Bedford Aerodrome: its ICAO location identifier (EGBF) and its runway surface type (Concrete). According to the workflow, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should ensure both facts are included and logically ordered, with no omissions or hallucinations. \nInstruction:\n- Review the two facts about Bedford Aerodrome.\n- Decide on the most logical order for presenting these facts in a short, coherent text (e.g., identifier first, then runway type, or vice versa).\n- Output the ordered list of facts, ready for the next stage (Text Structuring).\n- Do not omit any information or add any new facts. \n\nWorker Input: - Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about Bedford Aerodrome into a logical order for a coherent narrative. Ensure both facts are included and no information is omitted or invented.', instruction='- Review the two facts about Bedford Aerodrome.\n- Decide on the most logical order for presenting these facts in a short, coherent text (e.g., identifier first, then runway type, or vice versa).\n- Output the ordered list of facts, ready for the next stage (Text Structuring).\n- Do not omit any information or add any new facts. \n\nWorker Output: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about Bedford Aerodrome into a logical order for a coherent narrative. Ensure both facts are included and no information is omitted or invented.', instruction='- Review the two facts about Bedford Aerodrome.\n- Decide on the most logical order for presenting these facts in a short, coherent text (e.g., identifier first, then runway type, or vice versa).\n- Output the ordered list of facts, ready for the next stage (Text Structuring).\n- Do not omit any information or add any new facts.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\n- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about Bedford Aerodrome into a logical order for a coherent narrative. Ensure both facts are included and no information is omitted or invented. \nAdditional Instruction: - Review the two facts about Bedford Aerodrome.\n- Decide on the most logical order for presenting these facts in a short, coherent text (e.g., identifier first, then runway type, or vice versa).\n- Output the ordered list of facts, ready for the next stage (Text Structuring).\n- Do not omit any information or add any new facts.\n-- INPUT END --\n-- OUTPUT START --\n['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Ordered Facts: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered facts into a clear and organized textual format, such as a paragraph or a list, ensuring all information is included and nothing is omitted or invented.', instruction='- Use the ordered facts to create a well-structured text (preferably a single, coherent paragraph).\n- Ensure both facts are clearly presented and logically connected.\n- Do not add any information or omit any details from the ordered facts.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.')",
            "rationale": "The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The facts are logically ordered, with the ICAO location identifier presented first, followed by the runway surface type. According to the workflow policy, I should now proceed to the next stage, which is text structuring. I will provide the text structuring worker with the original data, the ordered facts, and clear instructions to organize the information into a coherent textual structure (such as a single paragraph or a list), ensuring that no information is omitted or invented. \nInstruction:\n- Use the ordered facts to create a well-structured text (preferably a single, coherent paragraph).\n- Ensure both facts are clearly presented and logically connected.\n- Do not add any information or omit any details from the ordered facts.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Ordered Facts: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered facts into a clear and organized textual format, such as a paragraph or a list, ensuring all information is included and nothing is omitted or invented. \nAdditional Instruction: - Use the ordered facts to create a well-structured text (preferably a single, coherent paragraph).\n- Ensure both facts are clearly presented and logically connected.\n- Do not add any information or omit any details from the ordered facts.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.",
            "agent_output": "<paragraph>\n  <snt>\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    Bedford_Aerodrome | runwaySurfaceType | Concrete\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    Bedford_Aerodrome | runwaySurfaceType | Concrete\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The facts are logically ordered, with the ICAO location identifier presented first, followed by the runway surface type. According to the workflow policy, I should now proceed to the next stage, which is text structuring. I will provide the text structuring worker with the original data, the ordered facts, and clear instructions to organize the information into a coherent textual structure (such as a single paragraph or a list), ensuring that no information is omitted or invented. \nInstruction:\n- Use the ordered facts to create a well-structured text (preferably a single, coherent paragraph).\n- Ensure both facts are clearly presented and logically connected.\n- Do not add any information or omit any details from the ordered facts.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language. \n\nWorker Input: - Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Ordered Facts: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered facts into a clear and organized textual format, such as a paragraph or a list, ensuring all information is included and nothing is omitted or invented.', instruction='- Use the ordered facts to create a well-structured text (preferably a single, coherent paragraph).\n- Ensure both facts are clearly presented and logically connected.\n- Do not add any information or omit any details from the ordered facts.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language. \n\nWorker Output: <paragraph>\n  <snt>\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    Bedford_Aerodrome | runwaySurfaceType | Concrete\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Ordered Facts: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered facts into a clear and organized textual format, such as a paragraph or a list, ensuring all information is included and nothing is omitted or invented.', instruction='- Use the ordered facts to create a well-structured text (preferably a single, coherent paragraph).\n- Ensure both facts are clearly presented and logically connected.\n- Do not add any information or omit any details from the ordered facts.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Ordered Facts: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered facts into a clear and organized textual format, such as a paragraph or a list, ensuring all information is included and nothing is omitted or invented. \nAdditional Instruction: - Use the ordered facts to create a well-structured text (preferably a single, coherent paragraph).\n- Ensure both facts are clearly presented and logically connected.\n- Do not add any information or omit any details from the ordered facts.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    Bedford_Aerodrome | runwaySurfaceType | Concrete\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Structured Output: \n<paragraph>\n  <snt>\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    Bedford_Aerodrome | runwaySurfaceType | Concrete\n  </snt>\n</paragraph>\n- Guardrail Feedback: Previous stage marked as 'CORRECT'; all information is present and properly structured.\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding paragraph. Ensure that both facts are clearly and accurately expressed, with no information omitted or invented.', instruction='- Transform the structured facts into a single, coherent, and fluent paragraph.\n- Clearly state that Bedford Aerodrome has the ICAO location identifier EGBF and that its runway surface type is concrete.\n- Do not add any extra information or omit any details from the original data.\n- Ensure the text is natural, clear, and ready for final output.')",
            "rationale": "The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that all information is present and properly organized. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured output, and clear instructions to ensure the final text is accurate, fluent, and free from omissions or hallucinations. \nInstruction:\n- Transform the structured facts into a single, coherent, and fluent paragraph.\n- Clearly state that Bedford Aerodrome has the ICAO location identifier EGBF and that its runway surface type is concrete.\n- Do not add any extra information or omit any details from the original data.\n- Ensure the text is natural, clear, and ready for final output."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Structured Output: \n<paragraph>\n  <snt>\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    Bedford_Aerodrome | runwaySurfaceType | Concrete\n  </snt>\n</paragraph>\n- Guardrail Feedback: Previous stage marked as 'CORRECT'; all information is present and properly structured.\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding paragraph. Ensure that both facts are clearly and accurately expressed, with no information omitted or invented. \nAdditional Instruction: - Transform the structured facts into a single, coherent, and fluent paragraph.\n- Clearly state that Bedford Aerodrome has the ICAO location identifier EGBF and that its runway surface type is concrete.\n- Do not add any extra information or omit any details from the original data.\n- Ensure the text is natural, clear, and ready for final output.",
            "agent_output": "Bedford Aerodrome has the ICAO location identifier EGBF, and its runway surface type is concrete.",
            "rationale": "Bedford Aerodrome has the ICAO location identifier EGBF, and its runway surface type is concrete."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that all information is present and properly organized. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured output, and clear instructions to ensure the final text is accurate, fluent, and free from omissions or hallucinations. \nInstruction:\n- Transform the structured facts into a single, coherent, and fluent paragraph.\n- Clearly state that Bedford Aerodrome has the ICAO location identifier EGBF and that its runway surface type is concrete.\n- Do not add any extra information or omit any details from the original data.\n- Ensure the text is natural, clear, and ready for final output. \n\nWorker Input: - Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Structured Output: \n<paragraph>\n  <snt>\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    Bedford_Aerodrome | runwaySurfaceType | Concrete\n  </snt>\n</paragraph>\n- Guardrail Feedback: Previous stage marked as 'CORRECT'; all information is present and properly structured.\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding paragraph. Ensure that both facts are clearly and accurately expressed, with no information omitted or invented.', instruction='- Transform the structured facts into a single, coherent, and fluent paragraph.\n- Clearly state that Bedford Aerodrome has the ICAO location identifier EGBF and that its runway surface type is concrete.\n- Do not add any extra information or omit any details from the original data.\n- Ensure the text is natural, clear, and ready for final output. \n\nWorker Output: Bedford Aerodrome has the ICAO location identifier EGBF, and its runway surface type is concrete.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Ordered Facts: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered facts into a clear and organized textual format, such as a paragraph or a list, ensuring all information is included and nothing is omitted or invented. \nAdditional Instruction: - Use the ordered facts to create a well-structured text (preferably a single, coherent paragraph).\n- Ensure both facts are clearly presented and logically connected.\n- Do not add any information or omit any details from the ordered facts.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    Bedford_Aerodrome | runwaySurfaceType | Concrete\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\n- Original Data: ['Bedford_Aerodrome | icaoLocationIdentifier | EGBF', 'Bedford_Aerodrome | runwaySurfaceType | Concrete']\n- Structured Output: \n<paragraph>\n  <snt>\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    Bedford_Aerodrome | runwaySurfaceType | Concrete\n  </snt>\n</paragraph>\n- Guardrail Feedback: Previous stage marked as 'CORRECT'; all information is present and properly structured.\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding paragraph. Ensure that both facts are clearly and accurately expressed, with no information omitted or invented. \nAdditional Instruction: - Transform the structured facts into a single, coherent, and fluent paragraph.\n- Clearly state that Bedford Aerodrome has the ICAO location identifier EGBF and that its runway surface type is concrete.\n- Do not add any extra information or omit any details from the original data.\n- Ensure the text is natural, clear, and ready for final output.\n-- INPUT END --\n-- OUTPUT START --\nBedford Aerodrome has the ICAO location identifier EGBF, and its runway surface type is concrete.\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "Bedford Aerodrome has the ICAO location identifier EGBF, and its runway surface type is concrete.",
            "rationale": null
        }
    ]
}