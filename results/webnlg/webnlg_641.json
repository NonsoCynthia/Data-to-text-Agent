{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\", 'John_Mills | birthPlace | North_Elmham']\nOutput: ",
    "final_response": "John Mills, who was born in North Elmham, starred in the film \"It's Great to Be Young\" released in 1956.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\", 'John_Mills | birthPlace | North_Elmham']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\", 'John_Mills | birthPlace | North_Elmham']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback.', instruction='- Organize the provided facts into a logical order that would make for a coherent and natural narrative when expressed in text.\n- Ensure that both facts are included and that no information is omitted or invented.\n- The ordering should facilitate a smooth transition to the next stage (Text Structuring), so consider how a reader would best understand the relationship between the film, John Mills, and his birthplace.\n- Output the ordered list of content points, ready for text structuring.')",
            "rationale": "The user has provided two RDF triples from the WebNLG dataset. The first triple indicates that \"It's Great to Be Young (1956 film)\" stars John Mills, and the second triple states that John Mills was born in North Elmham. According to the workflow policy, the first step is Content Ordering, where I must organize these facts into a logical sequence for a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. I will provide the original data, clarify that all information must be included without hallucination or omission, and instruct the worker to order the content for a natural, informative text. \nInstruction:\n- Organize the provided facts into a logical order that would make for a coherent and natural narrative when expressed in text.\n- Ensure that both facts are included and that no information is omitted or invented.\n- The ordering should facilitate a smooth transition to the next stage (Text Structuring), so consider how a reader would best understand the relationship between the film, John Mills, and his birthplace.\n- Output the ordered list of content points, ready for text structuring."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback. \nAdditional Instruction: - Organize the provided facts into a logical order that would make for a coherent and natural narrative when expressed in text.\n- Ensure that both facts are included and that no information is omitted or invented.\n- The ordering should facilitate a smooth transition to the next stage (Text Structuring), so consider how a reader would best understand the relationship between the film, John Mills, and his birthplace.\n- Output the ordered list of content points, ready for text structuring.",
            "agent_output": [
                "\"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"",
                "John_Mills | birthPlace | North_Elmham"
            ],
            "rationale": [
                "\"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"",
                "John_Mills | birthPlace | North_Elmham"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided two RDF triples from the WebNLG dataset. The first triple indicates that \"It's Great to Be Young (1956 film)\" stars John Mills, and the second triple states that John Mills was born in North Elmham. According to the workflow policy, the first step is Content Ordering, where I must organize these facts into a logical sequence for a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. I will provide the original data, clarify that all information must be included without hallucination or omission, and instruct the worker to order the content for a natural, informative text. \nInstruction:\n- Organize the provided facts into a logical order that would make for a coherent and natural narrative when expressed in text.\n- Ensure that both facts are included and that no information is omitted or invented.\n- The ordering should facilitate a smooth transition to the next stage (Text Structuring), so consider how a reader would best understand the relationship between the film, John Mills, and his birthplace.\n- Output the ordered list of content points, ready for text structuring. \n\nWorker Input: Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback.', instruction='- Organize the provided facts into a logical order that would make for a coherent and natural narrative when expressed in text.\n- Ensure that both facts are included and that no information is omitted or invented.\n- The ordering should facilitate a smooth transition to the next stage (Text Structuring), so consider how a reader would best understand the relationship between the film, John Mills, and his birthplace.\n- Output the ordered list of content points, ready for text structuring. \n\nWorker Output: ['\"It\\'s_Great_to_Be_Young_(1956_film) | starring | John_Mills\"', 'John_Mills | birthPlace | North_Elmham']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\", 'John_Mills | birthPlace | North_Elmham']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback.', instruction='- Organize the provided facts into a logical order that would make for a coherent and natural narrative when expressed in text.\n- Ensure that both facts are included and that no information is omitted or invented.\n- The ordering should facilitate a smooth transition to the next stage (Text Structuring), so consider how a reader would best understand the relationship between the film, John Mills, and his birthplace.\n- Output the ordered list of content points, ready for text structuring.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\nOriginal Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback. \nAdditional Instruction: - Organize the provided facts into a logical order that would make for a coherent and natural narrative when expressed in text.\n- Ensure that both facts are included and that no information is omitted or invented.\n- The ordering should facilitate a smooth transition to the next stage (Text Structuring), so consider how a reader would best understand the relationship between the film, John Mills, and his birthplace.\n- Output the ordered list of content points, ready for text structuring.\n-- INPUT END --\n-- OUTPUT START --\n['\"It\\'s_Great_to_Be_Young_(1956_film) | starring | John_Mills\"', 'John_Mills | birthPlace | North_Elmham']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nOrdered Content: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for content ordering.', instruction='- Structure the ordered facts into a coherent textual format, such as a paragraph or a set of connected sentences.\n- Ensure both facts are included, clearly connected, and no information is omitted or invented.\n- The structure should facilitate a smooth transition to the surface realization stage, making it easy to convert into fluent, natural language.\n- Output the structured content, ready for surface realization.')",
            "rationale": "The content ordering stage has been completed and validated as correct by the guardrail feedback. The facts are logically ordered: first introducing the film and its starring actor, then providing information about the actor's birthplace. The next step is to structure these ordered facts into a coherent textual structure, such as a paragraph, ensuring both facts are included and clearly connected. I will now assign the task to the 'text structuring' worker, providing the ordered content, original data, and clear instructions to create an organized, connected structure suitable for surface realization. \nInstruction:\n- Structure the ordered facts into a coherent textual format, such as a paragraph or a set of connected sentences.\n- Ensure both facts are included, clearly connected, and no information is omitted or invented.\n- The structure should facilitate a smooth transition to the surface realization stage, making it easy to convert into fluent, natural language.\n- Output the structured content, ready for surface realization."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nOrdered Content: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for content ordering. \nAdditional Instruction: - Structure the ordered facts into a coherent textual format, such as a paragraph or a set of connected sentences.\n- Ensure both facts are included, clearly connected, and no information is omitted or invented.\n- The structure should facilitate a smooth transition to the surface realization stage, making it easy to convert into fluent, natural language.\n- Output the structured content, ready for surface realization.",
            "agent_output": "<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\n    John_Mills | birthPlace | North_Elmham\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\n    John_Mills | birthPlace | North_Elmham\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed and validated as correct by the guardrail feedback. The facts are logically ordered: first introducing the film and its starring actor, then providing information about the actor's birthplace. The next step is to structure these ordered facts into a coherent textual structure, such as a paragraph, ensuring both facts are included and clearly connected. I will now assign the task to the 'text structuring' worker, providing the ordered content, original data, and clear instructions to create an organized, connected structure suitable for surface realization. \nInstruction:\n- Structure the ordered facts into a coherent textual format, such as a paragraph or a set of connected sentences.\n- Ensure both facts are included, clearly connected, and no information is omitted or invented.\n- The structure should facilitate a smooth transition to the surface realization stage, making it easy to convert into fluent, natural language.\n- Output the structured content, ready for surface realization. \n\nWorker Input: Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nOrdered Content: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for content ordering.', instruction='- Structure the ordered facts into a coherent textual format, such as a paragraph or a set of connected sentences.\n- Ensure both facts are included, clearly connected, and no information is omitted or invented.\n- The structure should facilitate a smooth transition to the surface realization stage, making it easy to convert into fluent, natural language.\n- Output the structured content, ready for surface realization. \n\nWorker Output: <paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\n    John_Mills | birthPlace | North_Elmham\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\", 'John_Mills | birthPlace | North_Elmham']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nOrdered Content: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for content ordering.', instruction='- Structure the ordered facts into a coherent textual format, such as a paragraph or a set of connected sentences.\n- Ensure both facts are included, clearly connected, and no information is omitted or invented.\n- The structure should facilitate a smooth transition to the surface realization stage, making it easy to convert into fluent, natural language.\n- Output the structured content, ready for surface realization.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\nOriginal Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nOrdered Content: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for content ordering. \nAdditional Instruction: - Structure the ordered facts into a coherent textual format, such as a paragraph or a set of connected sentences.\n- Ensure both facts are included, clearly connected, and no information is omitted or invented.\n- The structure should facilitate a smooth transition to the surface realization stage, making it easy to convert into fluent, natural language.\n- Output the structured content, ready for surface realization.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\n    John_Mills | birthPlace | North_Elmham\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nStructured Content: \n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\n    John_Mills | birthPlace | North_Elmham\n  </snt>\n</paragraph>\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for text structuring.', instruction='- Convert the structured content into fluent, natural English text.\n- Ensure both facts are clearly and accurately expressed: that John Mills starred in \"It's Great to Be Young (1956 film)\" and that John Mills was born in North Elmham.\n- Do not omit any information or add any details not present in the data.\n- The final text should be grammatically correct, coherent, and easy to read.')",
            "rationale": "The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is accurate and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the surface realization worker with the original data, the structured content, and clear instructions to ensure the final output is fluent, coherent, and free from omissions or hallucinations. \nInstruction:\n- Convert the structured content into fluent, natural English text.\n- Ensure both facts are clearly and accurately expressed: that John Mills starred in \"It's Great to Be Young (1956 film)\" and that John Mills was born in North Elmham.\n- Do not omit any information or add any details not present in the data.\n- The final text should be grammatically correct, coherent, and easy to read."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nStructured Content: \n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\n    John_Mills | birthPlace | North_Elmham\n  </snt>\n</paragraph>\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for text structuring. \nAdditional Instruction: - Convert the structured content into fluent, natural English text.\n- Ensure both facts are clearly and accurately expressed: that John Mills starred in \"It's Great to Be Young (1956 film)\" and that John Mills was born in North Elmham.\n- Do not omit any information or add any details not present in the data.\n- The final text should be grammatically correct, coherent, and easy to read.",
            "agent_output": "John Mills, who was born in North Elmham, starred in the film \"It's Great to Be Young\" released in 1956.",
            "rationale": "John Mills, who was born in North Elmham, starred in the film \"It's Great to Be Young\" released in 1956."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is accurate and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the surface realization worker with the original data, the structured content, and clear instructions to ensure the final output is fluent, coherent, and free from omissions or hallucinations. \nInstruction:\n- Convert the structured content into fluent, natural English text.\n- Ensure both facts are clearly and accurately expressed: that John Mills starred in \"It's Great to Be Young (1956 film)\" and that John Mills was born in North Elmham.\n- Do not omit any information or add any details not present in the data.\n- The final text should be grammatically correct, coherent, and easy to read. \n\nWorker Input: Original Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nStructured Content: \n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\n    John_Mills | birthPlace | North_Elmham\n  </snt>\n</paragraph>\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for text structuring.', instruction='- Convert the structured content into fluent, natural English text.\n- Ensure both facts are clearly and accurately expressed: that John Mills starred in \"It's Great to Be Young (1956 film)\" and that John Mills was born in North Elmham.\n- Do not omit any information or add any details not present in the data.\n- The final text should be grammatically correct, coherent, and easy to read. \n\nWorker Output: John Mills, who was born in North Elmham, starred in the film \"It's Great to Be Young\" released in 1956.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\nOriginal Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nOrdered Content: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for content ordering. \nAdditional Instruction: - Structure the ordered facts into a coherent textual format, such as a paragraph or a set of connected sentences.\n- Ensure both facts are included, clearly connected, and no information is omitted or invented.\n- The structure should facilitate a smooth transition to the surface realization stage, making it easy to convert into fluent, natural language.\n- Output the structured content, ready for surface realization.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\n    John_Mills | birthPlace | North_Elmham\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\nOriginal Data: \n1. \"It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\"\n2. \"John_Mills | birthPlace | North_Elmham\"\n\nStructured Content: \n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | starring | John_Mills\n    John_Mills | birthPlace | North_Elmham\n  </snt>\n</paragraph>\n\nNo prior pipeline results or guardrail feedback beyond 'CORRECT' for text structuring. \nAdditional Instruction: - Convert the structured content into fluent, natural English text.\n- Ensure both facts are clearly and accurately expressed: that John Mills starred in \"It's Great to Be Young (1956 film)\" and that John Mills was born in North Elmham.\n- Do not omit any information or add any details not present in the data.\n- The final text should be grammatically correct, coherent, and easy to read.\n-- INPUT END --\n-- OUTPUT START --\nJohn Mills, who was born in North Elmham, starred in the film \"It's Great to Be Young\" released in 1956.\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "John Mills, who was born in North Elmham, starred in the film \"It's Great to Be Young\" released in 1956.",
            "rationale": null
        }
    ]
}