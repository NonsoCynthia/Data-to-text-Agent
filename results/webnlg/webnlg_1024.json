{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\nOutput: ",
    "final_response": "Live at Roadburn 2008 (Year of No Light album) is followed by Karysun / Year of No Light.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior pipeline results or guardrail feedback, as this is the initial step.\n- Task: Organize the provided data in the most logical order for narrative presentation, ensuring no information is omitted or added.', instruction='- Review the provided triple and determine the most logical order for presenting the information in a coherent narrative.\n- Since there is only one triple, ensure that the content is ready for the next stage without omission or addition.\n- Output the ordered content, clearly indicating the sequence for subsequent text structuring.')",
            "rationale": "The user has provided a single triple from the WebNLG dataset: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']. According to the pipeline, the first step is Content Ordering. Since there is only one triple, the ordering is straightforward, but I must still assign the 'content ordering' worker to ensure the pipeline is followed strictly. I will provide the original data, clarify that all information must be preserved, and instruct the worker to determine the most logical order for presenting this content (even if trivial in this case). \nInstruction:\n- Review the provided triple and determine the most logical order for presenting the information in a coherent narrative.\n- Since there is only one triple, ensure that the content is ready for the next stage without omission or addition.\n- Output the ordered content, clearly indicating the sequence for subsequent text structuring."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior pipeline results or guardrail feedback, as this is the initial step.\n- Task: Organize the provided data in the most logical order for narrative presentation, ensuring no information is omitted or added. \nAdditional Instruction: - Review the provided triple and determine the most logical order for presenting the information in a coherent narrative.\n- Since there is only one triple, ensure that the content is ready for the next stage without omission or addition.\n- Output the ordered content, clearly indicating the sequence for subsequent text structuring.",
            "agent_output": [
                "Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light"
            ],
            "rationale": [
                "Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided a single triple from the WebNLG dataset: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']. According to the pipeline, the first step is Content Ordering. Since there is only one triple, the ordering is straightforward, but I must still assign the 'content ordering' worker to ensure the pipeline is followed strictly. I will provide the original data, clarify that all information must be preserved, and instruct the worker to determine the most logical order for presenting this content (even if trivial in this case). \nInstruction:\n- Review the provided triple and determine the most logical order for presenting the information in a coherent narrative.\n- Since there is only one triple, ensure that the content is ready for the next stage without omission or addition.\n- Output the ordered content, clearly indicating the sequence for subsequent text structuring. \n\nWorker Input: - Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior pipeline results or guardrail feedback, as this is the initial step.\n- Task: Organize the provided data in the most logical order for narrative presentation, ensuring no information is omitted or added.', instruction='- Review the provided triple and determine the most logical order for presenting the information in a coherent narrative.\n- Since there is only one triple, ensure that the content is ready for the next stage without omission or addition.\n- Output the ordered content, clearly indicating the sequence for subsequent text structuring. \n\nWorker Output: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior pipeline results or guardrail feedback, as this is the initial step.\n- Task: Organize the provided data in the most logical order for narrative presentation, ensuring no information is omitted or added.', instruction='- Review the provided triple and determine the most logical order for presenting the information in a coherent narrative.\n- Since there is only one triple, ensure that the content is ready for the next stage without omission or addition.\n- Output the ordered content, clearly indicating the sequence for subsequent text structuring.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\n- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior pipeline results or guardrail feedback, as this is the initial step.\n- Task: Organize the provided data in the most logical order for narrative presentation, ensuring no information is omitted or added. \nAdditional Instruction: - Review the provided triple and determine the most logical order for presenting the information in a coherent narrative.\n- Since there is only one triple, ensure that the content is ready for the next stage without omission or addition.\n- Output the ordered content, clearly indicating the sequence for subsequent text structuring.\n-- INPUT END --\n-- OUTPUT START --\n['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Ordered Content: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior guardrail feedback indicating issues.\n- Task: Organize the ordered content into a clear and logical textual structure, such as a sentence or short paragraph, ensuring that all information from the triple is included and nothing is omitted or added.', instruction='- Convert the ordered triple into a well-structured sentence or short paragraph.\n- Ensure that the relationship (\"followedBy\") between \"Live at Roadburn 2008 (Year of No Light album)\" and \"Karysun / Year of No Light\" is clearly and accurately expressed.\n- Do not omit any information or introduce any new details.\n- Prepare the structured text for the next stage (surface realization).')",
            "rationale": "The content ordering stage has been completed correctly, as confirmed by the guardrail feedback ('CORRECT'). The single triple is logically ordered and ready for the next stage. The next step in the pipeline is text structuring, where the ordered content will be organized into a suitable textual structure (e.g., a sentence or paragraph) without omitting or adding information. There are no errors or omissions, so I will proceed to assign the task to the 'text structuring' worker. \nInstruction:\n- Convert the ordered triple into a well-structured sentence or short paragraph.\n- Ensure that the relationship (\"followedBy\") between \"Live at Roadburn 2008 (Year of No Light album)\" and \"Karysun / Year of No Light\" is clearly and accurately expressed.\n- Do not omit any information or introduce any new details.\n- Prepare the structured text for the next stage (surface realization)."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Ordered Content: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior guardrail feedback indicating issues.\n- Task: Organize the ordered content into a clear and logical textual structure, such as a sentence or short paragraph, ensuring that all information from the triple is included and nothing is omitted or added. \nAdditional Instruction: - Convert the ordered triple into a well-structured sentence or short paragraph.\n- Ensure that the relationship (\"followedBy\") between \"Live at Roadburn 2008 (Year of No Light album)\" and \"Karysun / Year of No Light\" is clearly and accurately expressed.\n- Do not omit any information or introduce any new details.\n- Prepare the structured text for the next stage (surface realization).",
            "agent_output": "<paragraph>\n  <snt>\n    Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed correctly, as confirmed by the guardrail feedback ('CORRECT'). The single triple is logically ordered and ready for the next stage. The next step in the pipeline is text structuring, where the ordered content will be organized into a suitable textual structure (e.g., a sentence or paragraph) without omitting or adding information. There are no errors or omissions, so I will proceed to assign the task to the 'text structuring' worker. \nInstruction:\n- Convert the ordered triple into a well-structured sentence or short paragraph.\n- Ensure that the relationship (\"followedBy\") between \"Live at Roadburn 2008 (Year of No Light album)\" and \"Karysun / Year of No Light\" is clearly and accurately expressed.\n- Do not omit any information or introduce any new details.\n- Prepare the structured text for the next stage (surface realization). \n\nWorker Input: - Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Ordered Content: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior guardrail feedback indicating issues.\n- Task: Organize the ordered content into a clear and logical textual structure, such as a sentence or short paragraph, ensuring that all information from the triple is included and nothing is omitted or added.', instruction='- Convert the ordered triple into a well-structured sentence or short paragraph.\n- Ensure that the relationship (\"followedBy\") between \"Live at Roadburn 2008 (Year of No Light album)\" and \"Karysun / Year of No Light\" is clearly and accurately expressed.\n- Do not omit any information or introduce any new details.\n- Prepare the structured text for the next stage (surface realization). \n\nWorker Output: <paragraph>\n  <snt>\n    Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Ordered Content: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior guardrail feedback indicating issues.\n- Task: Organize the ordered content into a clear and logical textual structure, such as a sentence or short paragraph, ensuring that all information from the triple is included and nothing is omitted or added.', instruction='- Convert the ordered triple into a well-structured sentence or short paragraph.\n- Ensure that the relationship (\"followedBy\") between \"Live at Roadburn 2008 (Year of No Light album)\" and \"Karysun / Year of No Light\" is clearly and accurately expressed.\n- Do not omit any information or introduce any new details.\n- Prepare the structured text for the next stage (surface realization).')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Ordered Content: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior guardrail feedback indicating issues.\n- Task: Organize the ordered content into a clear and logical textual structure, such as a sentence or short paragraph, ensuring that all information from the triple is included and nothing is omitted or added. \nAdditional Instruction: - Convert the ordered triple into a well-structured sentence or short paragraph.\n- Ensure that the relationship (\"followedBy\") between \"Live at Roadburn 2008 (Year of No Light album)\" and \"Karysun / Year of No Light\" is clearly and accurately expressed.\n- Do not omit any information or introduce any new details.\n- Prepare the structured text for the next stage (surface realization).\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Structured Content: \n<paragraph>\n  <snt>\n    Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light\n  </snt>\n</paragraph>\n- Guardrail Feedback: CORRECT (from previous stage)\n- Task: Convert the structured content into a fluent, natural-sounding sentence that accurately expresses the relationship in the data triple, without omitting any information or introducing new details.', instruction='- Transform the structured content into a clear, grammatically correct sentence.\n- Clearly express that \"Live at Roadburn 2008 (Year of No Light album)\" is followed by \"Karysun / Year of No Light\".\n- Do not omit any information or add any extra details.\n- Ensure the output is fluent, natural, and ready for final delivery.')",
            "rationale": "The text structuring stage has been completed, and the guardrail feedback is 'CORRECT', indicating that the structured content is accurate and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and clear instructions to ensure the final output is readable, grammatically correct, and does not omit or add any information. \nInstruction:\n- Transform the structured content into a clear, grammatically correct sentence.\n- Clearly express that \"Live at Roadburn 2008 (Year of No Light album)\" is followed by \"Karysun / Year of No Light\".\n- Do not omit any information or add any extra details.\n- Ensure the output is fluent, natural, and ready for final delivery."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Structured Content: \n<paragraph>\n  <snt>\n    Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light\n  </snt>\n</paragraph>\n- Guardrail Feedback: CORRECT (from previous stage)\n- Task: Convert the structured content into a fluent, natural-sounding sentence that accurately expresses the relationship in the data triple, without omitting any information or introducing new details. \nAdditional Instruction: - Transform the structured content into a clear, grammatically correct sentence.\n- Clearly express that \"Live at Roadburn 2008 (Year of No Light album)\" is followed by \"Karysun / Year of No Light\".\n- Do not omit any information or add any extra details.\n- Ensure the output is fluent, natural, and ready for final delivery.",
            "agent_output": "Live at Roadburn 2008 (Year of No Light album) is followed by Karysun / Year of No Light.",
            "rationale": "Live at Roadburn 2008 (Year of No Light album) is followed by Karysun / Year of No Light."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed, and the guardrail feedback is 'CORRECT', indicating that the structured content is accurate and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and clear instructions to ensure the final output is readable, grammatically correct, and does not omit or add any information. \nInstruction:\n- Transform the structured content into a clear, grammatically correct sentence.\n- Clearly express that \"Live at Roadburn 2008 (Year of No Light album)\" is followed by \"Karysun / Year of No Light\".\n- Do not omit any information or add any extra details.\n- Ensure the output is fluent, natural, and ready for final delivery. \n\nWorker Input: - Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Structured Content: \n<paragraph>\n  <snt>\n    Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light\n  </snt>\n</paragraph>\n- Guardrail Feedback: CORRECT (from previous stage)\n- Task: Convert the structured content into a fluent, natural-sounding sentence that accurately expresses the relationship in the data triple, without omitting any information or introducing new details.', instruction='- Transform the structured content into a clear, grammatically correct sentence.\n- Clearly express that \"Live at Roadburn 2008 (Year of No Light album)\" is followed by \"Karysun / Year of No Light\".\n- Do not omit any information or add any extra details.\n- Ensure the output is fluent, natural, and ready for final delivery. \n\nWorker Output: Live at Roadburn 2008 (Year of No Light album) is followed by Karysun / Year of No Light.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Ordered Content: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- No prior guardrail feedback indicating issues.\n- Task: Organize the ordered content into a clear and logical textual structure, such as a sentence or short paragraph, ensuring that all information from the triple is included and nothing is omitted or added. \nAdditional Instruction: - Convert the ordered triple into a well-structured sentence or short paragraph.\n- Ensure that the relationship (\"followedBy\") between \"Live at Roadburn 2008 (Year of No Light album)\" and \"Karysun / Year of No Light\" is clearly and accurately expressed.\n- Do not omit any information or introduce any new details.\n- Prepare the structured text for the next stage (surface realization).\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\n- Original Data: ['Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light']\n- Structured Content: \n<paragraph>\n  <snt>\n    Live_at_Roadburn_2008_(Year_of_No_Light_album) | followedBy | Karysun_/_Year_of_No_Light\n  </snt>\n</paragraph>\n- Guardrail Feedback: CORRECT (from previous stage)\n- Task: Convert the structured content into a fluent, natural-sounding sentence that accurately expresses the relationship in the data triple, without omitting any information or introducing new details. \nAdditional Instruction: - Transform the structured content into a clear, grammatically correct sentence.\n- Clearly express that \"Live at Roadburn 2008 (Year of No Light album)\" is followed by \"Karysun / Year of No Light\".\n- Do not omit any information or add any extra details.\n- Ensure the output is fluent, natural, and ready for final delivery.\n-- INPUT END --\n-- OUTPUT START --\nLive at Roadburn 2008 (Year of No Light album) is followed by Karysun / Year of No Light.\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "Live at Roadburn 2008 (Year of No Light album) is followed by Karysun / Year of No Light.",
            "rationale": null
        }
    ]
}