{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\nOutput: ",
    "final_response": "Nie Haisheng was born in Zaoyang. He has participated in the Shenzhou 6 and Shenzhou 10 missions.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that would support a coherent and natural narrative for text generation. Consider starting with birthplace information, followed by the listing of missions.', instruction='- Review the provided data and arrange the information in an order that would make the most sense for a biographical summary.\n- Typically, begin with personal background (birthplace), then proceed to professional achievements (missions).\n- Do not omit any data or add any new information.\n- Output the ordered list of facts, ready for the next stage (Text Structuring).')",
            "rationale": "The user has provided a set of RDF triples from the WebNLG dataset, specifying that Nie Haisheng has participated in two missions (Shenzhou 10 and Shenzhou 6) and was born in Zaoyang. According to the workflow policy, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should organize the data to ensure a logical and natural flow, typically starting with biographical information (birthplace) followed by career achievements (missions). \nInstruction:\n- Review the provided data and arrange the information in an order that would make the most sense for a biographical summary.\n- Typically, begin with personal background (birthplace), then proceed to professional achievements (missions).\n- Do not omit any data or add any new information.\n- Output the ordered list of facts, ready for the next stage (Text Structuring)."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that would support a coherent and natural narrative for text generation. Consider starting with birthplace information, followed by the listing of missions. \nAdditional Instruction: - Review the provided data and arrange the information in an order that would make the most sense for a biographical summary.\n- Typically, begin with personal background (birthplace), then proceed to professional achievements (missions).\n- Do not omit any data or add any new information.\n- Output the ordered list of facts, ready for the next stage (Text Structuring).",
            "agent_output": [
                "Nie_Haisheng | birthPlace | Zaoyang",
                "Nie_Haisheng | mission | Shenzhou_6",
                "Nie_Haisheng | mission | Shenzhou_10"
            ],
            "rationale": [
                "Nie_Haisheng | birthPlace | Zaoyang",
                "Nie_Haisheng | mission | Shenzhou_6",
                "Nie_Haisheng | mission | Shenzhou_10"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided a set of RDF triples from the WebNLG dataset, specifying that Nie Haisheng has participated in two missions (Shenzhou 10 and Shenzhou 6) and was born in Zaoyang. According to the workflow policy, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should organize the data to ensure a logical and natural flow, typically starting with biographical information (birthplace) followed by career achievements (missions). \nInstruction:\n- Review the provided data and arrange the information in an order that would make the most sense for a biographical summary.\n- Typically, begin with personal background (birthplace), then proceed to professional achievements (missions).\n- Do not omit any data or add any new information.\n- Output the ordered list of facts, ready for the next stage (Text Structuring). \n\nWorker Input: - Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that would support a coherent and natural narrative for text generation. Consider starting with birthplace information, followed by the listing of missions.', instruction='- Review the provided data and arrange the information in an order that would make the most sense for a biographical summary.\n- Typically, begin with personal background (birthplace), then proceed to professional achievements (missions).\n- Do not omit any data or add any new information.\n- Output the ordered list of facts, ready for the next stage (Text Structuring). \n\nWorker Output: ['Nie_Haisheng | birthPlace | Zaoyang', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | mission | Shenzhou_10']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that would support a coherent and natural narrative for text generation. Consider starting with birthplace information, followed by the listing of missions.', instruction='- Review the provided data and arrange the information in an order that would make the most sense for a biographical summary.\n- Typically, begin with personal background (birthplace), then proceed to professional achievements (missions).\n- Do not omit any data or add any new information.\n- Output the ordered list of facts, ready for the next stage (Text Structuring).')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\n- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that would support a coherent and natural narrative for text generation. Consider starting with birthplace information, followed by the listing of missions. \nAdditional Instruction: - Review the provided data and arrange the information in an order that would make the most sense for a biographical summary.\n- Typically, begin with personal background (birthplace), then proceed to professional achievements (missions).\n- Do not omit any data or add any new information.\n- Output the ordered list of facts, ready for the next stage (Text Structuring).\n-- INPUT END --\n-- OUTPUT START --\n['Nie_Haisheng | birthPlace | Zaoyang', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | mission | Shenzhou_10']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Ordered Facts: ['Nie_Haisheng | birthPlace | Zaoyang', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | mission | Shenzhou_10']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear, logical textual structure (e.g., a paragraph or a list) that presents the information in a way that is easy to follow and sets up the next stage for fluent text generation.\n- Ensure that all facts are included and no information is omitted or added.', instruction='- Use the ordered facts to create a structured text outline or draft (such as a paragraph or bullet points) that presents Nie Haisheng's birthplace first, followed by his missions.\n- Maintain clarity and logical flow.\n- Do not add or omit any information.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.')",
            "rationale": "The content ordering stage has been completed correctly, as confirmed by the guardrail feedback ('CORRECT'). The facts are now logically ordered, starting with Nie Haisheng's birthplace followed by his missions. The next step in the pipeline is Text Structuring. The 'text structuring' worker should now take the ordered facts and organize them into a clear, well-structured textual format, such as a paragraph or list, ensuring all information is included and ready for surface realization. \nInstruction:\n- Use the ordered facts to create a structured text outline or draft (such as a paragraph or bullet points) that presents Nie Haisheng's birthplace first, followed by his missions.\n- Maintain clarity and logical flow.\n- Do not add or omit any information.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Ordered Facts: ['Nie_Haisheng | birthPlace | Zaoyang', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | mission | Shenzhou_10']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear, logical textual structure (e.g., a paragraph or a list) that presents the information in a way that is easy to follow and sets up the next stage for fluent text generation.\n- Ensure that all facts are included and no information is omitted or added. \nAdditional Instruction: - Use the ordered facts to create a structured text outline or draft (such as a paragraph or bullet points) that presents Nie Haisheng's birthplace first, followed by his missions.\n- Maintain clarity and logical flow.\n- Do not add or omit any information.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.",
            "agent_output": "<paragraph>\n  <snt>\n    Nie_Haisheng | birthPlace | Zaoyang\n  </snt>\n  <snt>\n    Nie_Haisheng | mission | Shenzhou_6\n    Nie_Haisheng | mission | Shenzhou_10\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    Nie_Haisheng | birthPlace | Zaoyang\n  </snt>\n  <snt>\n    Nie_Haisheng | mission | Shenzhou_6\n    Nie_Haisheng | mission | Shenzhou_10\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed correctly, as confirmed by the guardrail feedback ('CORRECT'). The facts are now logically ordered, starting with Nie Haisheng's birthplace followed by his missions. The next step in the pipeline is Text Structuring. The 'text structuring' worker should now take the ordered facts and organize them into a clear, well-structured textual format, such as a paragraph or list, ensuring all information is included and ready for surface realization. \nInstruction:\n- Use the ordered facts to create a structured text outline or draft (such as a paragraph or bullet points) that presents Nie Haisheng's birthplace first, followed by his missions.\n- Maintain clarity and logical flow.\n- Do not add or omit any information.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language. \n\nWorker Input: - Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Ordered Facts: ['Nie_Haisheng | birthPlace | Zaoyang', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | mission | Shenzhou_10']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear, logical textual structure (e.g., a paragraph or a list) that presents the information in a way that is easy to follow and sets up the next stage for fluent text generation.\n- Ensure that all facts are included and no information is omitted or added.', instruction='- Use the ordered facts to create a structured text outline or draft (such as a paragraph or bullet points) that presents Nie Haisheng's birthplace first, followed by his missions.\n- Maintain clarity and logical flow.\n- Do not add or omit any information.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language. \n\nWorker Output: <paragraph>\n  <snt>\n    Nie_Haisheng | birthPlace | Zaoyang\n  </snt>\n  <snt>\n    Nie_Haisheng | mission | Shenzhou_6\n    Nie_Haisheng | mission | Shenzhou_10\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Ordered Facts: ['Nie_Haisheng | birthPlace | Zaoyang', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | mission | Shenzhou_10']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear, logical textual structure (e.g., a paragraph or a list) that presents the information in a way that is easy to follow and sets up the next stage for fluent text generation.\n- Ensure that all facts are included and no information is omitted or added.', instruction='- Use the ordered facts to create a structured text outline or draft (such as a paragraph or bullet points) that presents Nie Haisheng's birthplace first, followed by his missions.\n- Maintain clarity and logical flow.\n- Do not add or omit any information.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Ordered Facts: ['Nie_Haisheng | birthPlace | Zaoyang', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | mission | Shenzhou_10']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear, logical textual structure (e.g., a paragraph or a list) that presents the information in a way that is easy to follow and sets up the next stage for fluent text generation.\n- Ensure that all facts are included and no information is omitted or added. \nAdditional Instruction: - Use the ordered facts to create a structured text outline or draft (such as a paragraph or bullet points) that presents Nie Haisheng's birthplace first, followed by his missions.\n- Maintain clarity and logical flow.\n- Do not add or omit any information.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Nie_Haisheng | birthPlace | Zaoyang\n  </snt>\n  <snt>\n    Nie_Haisheng | mission | Shenzhou_6\n    Nie_Haisheng | mission | Shenzhou_10\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Structured Content:\n<paragraph>\n  <snt>\n    Nie_Haisheng | birthPlace | Zaoyang\n  </snt>\n  <snt>\n    Nie_Haisheng | mission | Shenzhou_6\n    Nie_Haisheng | mission | Shenzhou_10\n  </snt>\n</paragraph>\n- No prior surface realization results or guardrail feedback for this stage.', instruction='- Convert the structured content into fluent, natural language text.\n- Ensure all facts are included: Nie Haisheng's birthplace (Zaoyang) and his missions (Shenzhou 6 and Shenzhou 10).\n- Do not add or omit any information.\n- Produce a coherent and readable paragraph that accurately reflects the data.')",
            "rationale": "The text structuring stage has been completed successfully, as confirmed by the guardrail feedback labeled 'CORRECT'. The structured content presents Nie Haisheng's birthplace first, followed by his missions, in a clear and logical order. The next step is surface realization, where this structured content will be transformed into fluent, natural language text. I will provide the surface realization worker with the original data, the structured content, and clear instructions to ensure all information is included, no information is omitted or added, and the output is fluent and coherent. \nInstruction:\n- Convert the structured content into fluent, natural language text.\n- Ensure all facts are included: Nie Haisheng's birthplace (Zaoyang) and his missions (Shenzhou 6 and Shenzhou 10).\n- Do not add or omit any information.\n- Produce a coherent and readable paragraph that accurately reflects the data."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Structured Content:\n<paragraph>\n  <snt>\n    Nie_Haisheng | birthPlace | Zaoyang\n  </snt>\n  <snt>\n    Nie_Haisheng | mission | Shenzhou_6\n    Nie_Haisheng | mission | Shenzhou_10\n  </snt>\n</paragraph>\n- No prior surface realization results or guardrail feedback for this stage. \nAdditional Instruction: - Convert the structured content into fluent, natural language text.\n- Ensure all facts are included: Nie Haisheng's birthplace (Zaoyang) and his missions (Shenzhou 6 and Shenzhou 10).\n- Do not add or omit any information.\n- Produce a coherent and readable paragraph that accurately reflects the data.",
            "agent_output": "Nie Haisheng was born in Zaoyang. He has participated in the Shenzhou 6 and Shenzhou 10 missions.",
            "rationale": "Nie Haisheng was born in Zaoyang. He has participated in the Shenzhou 6 and Shenzhou 10 missions."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed successfully, as confirmed by the guardrail feedback labeled 'CORRECT'. The structured content presents Nie Haisheng's birthplace first, followed by his missions, in a clear and logical order. The next step is surface realization, where this structured content will be transformed into fluent, natural language text. I will provide the surface realization worker with the original data, the structured content, and clear instructions to ensure all information is included, no information is omitted or added, and the output is fluent and coherent. \nInstruction:\n- Convert the structured content into fluent, natural language text.\n- Ensure all facts are included: Nie Haisheng's birthplace (Zaoyang) and his missions (Shenzhou 6 and Shenzhou 10).\n- Do not add or omit any information.\n- Produce a coherent and readable paragraph that accurately reflects the data. \n\nWorker Input: - Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Structured Content:\n<paragraph>\n  <snt>\n    Nie_Haisheng | birthPlace | Zaoyang\n  </snt>\n  <snt>\n    Nie_Haisheng | mission | Shenzhou_6\n    Nie_Haisheng | mission | Shenzhou_10\n  </snt>\n</paragraph>\n- No prior surface realization results or guardrail feedback for this stage.', instruction='- Convert the structured content into fluent, natural language text.\n- Ensure all facts are included: Nie Haisheng's birthplace (Zaoyang) and his missions (Shenzhou 6 and Shenzhou 10).\n- Do not add or omit any information.\n- Produce a coherent and readable paragraph that accurately reflects the data. \n\nWorker Output: Nie Haisheng was born in Zaoyang. He has participated in the Shenzhou 6 and Shenzhou 10 missions.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Ordered Facts: ['Nie_Haisheng | birthPlace | Zaoyang', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | mission | Shenzhou_10']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear, logical textual structure (e.g., a paragraph or a list) that presents the information in a way that is easy to follow and sets up the next stage for fluent text generation.\n- Ensure that all facts are included and no information is omitted or added. \nAdditional Instruction: - Use the ordered facts to create a structured text outline or draft (such as a paragraph or bullet points) that presents Nie Haisheng's birthplace first, followed by his missions.\n- Maintain clarity and logical flow.\n- Do not add or omit any information.\n- Prepare the output so it is ready for the surface realization stage, where it will be converted into fluent, natural language.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Nie_Haisheng | birthPlace | Zaoyang\n  </snt>\n  <snt>\n    Nie_Haisheng | mission | Shenzhou_6\n    Nie_Haisheng | mission | Shenzhou_10\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\n- Original Data: ['Nie_Haisheng | mission | Shenzhou_10', 'Nie_Haisheng | mission | Shenzhou_6', 'Nie_Haisheng | birthPlace | Zaoyang']\n- Structured Content:\n<paragraph>\n  <snt>\n    Nie_Haisheng | birthPlace | Zaoyang\n  </snt>\n  <snt>\n    Nie_Haisheng | mission | Shenzhou_6\n    Nie_Haisheng | mission | Shenzhou_10\n  </snt>\n</paragraph>\n- No prior surface realization results or guardrail feedback for this stage. \nAdditional Instruction: - Convert the structured content into fluent, natural language text.\n- Ensure all facts are included: Nie Haisheng's birthplace (Zaoyang) and his missions (Shenzhou 6 and Shenzhou 10).\n- Do not add or omit any information.\n- Produce a coherent and readable paragraph that accurately reflects the data.\n-- INPUT END --\n-- OUTPUT START --\nNie Haisheng was born in Zaoyang. He has participated in the Shenzhou 6 and Shenzhou 10 missions.\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "Nie Haisheng was born in Zaoyang. He has participated in the Shenzhou 6 and Shenzhou 10 missions.",
            "rationale": null
        }
    ]
}