{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\nOutput: ",
    "final_response": "The University of Burgundy has 16,800 undergraduate students and 9,400 postgraduate students.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order for narrative text generation. Ensure both data points are included and no information is omitted or added.', instruction='- Arrange the information about the University of Burgundy so that it forms a logical and coherent sequence for text generation.\n- Typically, present the number of undergraduate students first, followed by the number of postgraduate students.\n- Do not omit any data or introduce any new information.\n- Output the ordered content in a clear, structured format suitable for the next stage (Text Structuring).')",
            "rationale": "The user has provided two data triples about the University of Burgundy: the number of undergraduate students (16,800) and the number of postgraduate students (9,400). According to the workflow policy, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. There is no prior pipeline history or guardrail feedback, so I will proceed to assign the 'content ordering' worker. The worker should ensure both data points are included and arranged in a logical order, typically starting with undergraduate students followed by postgraduate students. \nInstruction:\n- Arrange the information about the University of Burgundy so that it forms a logical and coherent sequence for text generation.\n- Typically, present the number of undergraduate students first, followed by the number of postgraduate students.\n- Do not omit any data or introduce any new information.\n- Output the ordered content in a clear, structured format suitable for the next stage (Text Structuring)."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order for narrative text generation. Ensure both data points are included and no information is omitted or added. \nAdditional Instruction: - Arrange the information about the University of Burgundy so that it forms a logical and coherent sequence for text generation.\n- Typically, present the number of undergraduate students first, followed by the number of postgraduate students.\n- Do not omit any data or introduce any new information.\n- Output the ordered content in a clear, structured format suitable for the next stage (Text Structuring).",
            "agent_output": [
                "University_of_Burgundy | numberOfUndergraduateStudents | 16800",
                "University_of_Burgundy | numberOfPostgraduateStudents | 9400"
            ],
            "rationale": [
                "University_of_Burgundy | numberOfUndergraduateStudents | 16800",
                "University_of_Burgundy | numberOfPostgraduateStudents | 9400"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided two data triples about the University of Burgundy: the number of undergraduate students (16,800) and the number of postgraduate students (9,400). According to the workflow policy, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. There is no prior pipeline history or guardrail feedback, so I will proceed to assign the 'content ordering' worker. The worker should ensure both data points are included and arranged in a logical order, typically starting with undergraduate students followed by postgraduate students. \nInstruction:\n- Arrange the information about the University of Burgundy so that it forms a logical and coherent sequence for text generation.\n- Typically, present the number of undergraduate students first, followed by the number of postgraduate students.\n- Do not omit any data or introduce any new information.\n- Output the ordered content in a clear, structured format suitable for the next stage (Text Structuring). \n\nWorker Input: - Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order for narrative text generation. Ensure both data points are included and no information is omitted or added.', instruction='- Arrange the information about the University of Burgundy so that it forms a logical and coherent sequence for text generation.\n- Typically, present the number of undergraduate students first, followed by the number of postgraduate students.\n- Do not omit any data or introduce any new information.\n- Output the ordered content in a clear, structured format suitable for the next stage (Text Structuring). \n\nWorker Output: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order for narrative text generation. Ensure both data points are included and no information is omitted or added.', instruction='- Arrange the information about the University of Burgundy so that it forms a logical and coherent sequence for text generation.\n- Typically, present the number of undergraduate students first, followed by the number of postgraduate students.\n- Do not omit any data or introduce any new information.\n- Output the ordered content in a clear, structured format suitable for the next stage (Text Structuring).')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order for narrative text generation. Ensure both data points are included and no information is omitted or added. \nAdditional Instruction: - Arrange the information about the University of Burgundy so that it forms a logical and coherent sequence for text generation.\n- Typically, present the number of undergraduate students first, followed by the number of postgraduate students.\n- Do not omit any data or introduce any new information.\n- Output the ordered content in a clear, structured format suitable for the next stage (Text Structuring).\n-- INPUT END --\n-- OUTPUT START --\n['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear and organized textual format (e.g., a paragraph or a list) that is suitable for surface realization. Ensure both data points are included and no information is omitted or added.', instruction='- Convert the ordered data about the University of Burgundy into a well-structured textual format.\n- You may use a paragraph or a list, but ensure the structure is clear and all information is present.\n- Do not add, omit, or alter any data.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.')",
            "rationale": "The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The data is logically ordered, with the number of undergraduate students presented first, followed by the number of postgraduate students. There are no omissions or additions. According to the workflow policy, I should now proceed to the next stage, which is text structuring. I will provide the text structuring worker with the original data, the ordered content, and clear instructions to structure the information into a coherent textual format, such as a paragraph or list, ensuring all data is included and nothing is hallucinated. \nInstruction:\n- Convert the ordered data about the University of Burgundy into a well-structured textual format.\n- You may use a paragraph or a list, but ensure the structure is clear and all information is present.\n- Do not add, omit, or alter any data.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear and organized textual format (e.g., a paragraph or a list) that is suitable for surface realization. Ensure both data points are included and no information is omitted or added. \nAdditional Instruction: - Convert the ordered data about the University of Burgundy into a well-structured textual format.\n- You may use a paragraph or a list, but ensure the structure is clear and all information is present.\n- Do not add, omit, or alter any data.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.",
            "agent_output": "<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The data is logically ordered, with the number of undergraduate students presented first, followed by the number of postgraduate students. There are no omissions or additions. According to the workflow policy, I should now proceed to the next stage, which is text structuring. I will provide the text structuring worker with the original data, the ordered content, and clear instructions to structure the information into a coherent textual format, such as a paragraph or list, ensuring all data is included and nothing is hallucinated. \nInstruction:\n- Convert the ordered data about the University of Burgundy into a well-structured textual format.\n- You may use a paragraph or a list, but ensure the structure is clear and all information is present.\n- Do not add, omit, or alter any data.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness. \n\nWorker Input: - Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear and organized textual format (e.g., a paragraph or a list) that is suitable for surface realization. Ensure both data points are included and no information is omitted or added.', instruction='- Convert the ordered data about the University of Burgundy into a well-structured textual format.\n- You may use a paragraph or a list, but ensure the structure is clear and all information is present.\n- Do not add, omit, or alter any data.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness. \n\nWorker Output: <paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear and organized textual format (e.g., a paragraph or a list) that is suitable for surface realization. Ensure both data points are included and no information is omitted or added.', instruction='- Convert the ordered data about the University of Burgundy into a well-structured textual format.\n- You may use a paragraph or a list, but ensure the structure is clear and all information is present.\n- Do not add, omit, or alter any data.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear and organized textual format (e.g., a paragraph or a list) that is suitable for surface realization. Ensure both data points are included and no information is omitted or added. \nAdditional Instruction: - Convert the ordered data about the University of Burgundy into a well-structured textual format.\n- You may use a paragraph or a list, but ensure the structure is clear and all information is present.\n- Do not add, omit, or alter any data.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Structured Content: \n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n- No prior guardrail feedback.\n- Task: Transform the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure both data points are clearly and accurately expressed, with no information omitted or added.', instruction='- Write a fluent and natural sentence or short paragraph that accurately conveys both the number of undergraduate and postgraduate students at the University of Burgundy.\n- Do not omit or add any information.\n- Ensure the text is clear, readable, and free from grammatical errors.\n- Avoid awkward phrasing or repetition.')",
            "rationale": "The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is clear, complete, and ready for the next step. According to the workflow policy, I must now proceed to the surface realization stage. I will provide the surface realization worker with the original data, the structured content, and clear instructions to generate a fluent, natural, and accurate text that covers both data points without omission or hallucination. \nInstruction:\n- Write a fluent and natural sentence or short paragraph that accurately conveys both the number of undergraduate and postgraduate students at the University of Burgundy.\n- Do not omit or add any information.\n- Ensure the text is clear, readable, and free from grammatical errors.\n- Avoid awkward phrasing or repetition."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Structured Content: \n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n- No prior guardrail feedback.\n- Task: Transform the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure both data points are clearly and accurately expressed, with no information omitted or added. \nAdditional Instruction: - Write a fluent and natural sentence or short paragraph that accurately conveys both the number of undergraduate and postgraduate students at the University of Burgundy.\n- Do not omit or add any information.\n- Ensure the text is clear, readable, and free from grammatical errors.\n- Avoid awkward phrasing or repetition.",
            "agent_output": "The University of Burgundy has 16,800 undergraduate students and 9,400 postgraduate students.",
            "rationale": "The University of Burgundy has 16,800 undergraduate students and 9,400 postgraduate students."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is clear, complete, and ready for the next step. According to the workflow policy, I must now proceed to the surface realization stage. I will provide the surface realization worker with the original data, the structured content, and clear instructions to generate a fluent, natural, and accurate text that covers both data points without omission or hallucination. \nInstruction:\n- Write a fluent and natural sentence or short paragraph that accurately conveys both the number of undergraduate and postgraduate students at the University of Burgundy.\n- Do not omit or add any information.\n- Ensure the text is clear, readable, and free from grammatical errors.\n- Avoid awkward phrasing or repetition. \n\nWorker Input: - Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Structured Content: \n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n- No prior guardrail feedback.\n- Task: Transform the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure both data points are clearly and accurately expressed, with no information omitted or added.', instruction='- Write a fluent and natural sentence or short paragraph that accurately conveys both the number of undergraduate and postgraduate students at the University of Burgundy.\n- Do not omit or add any information.\n- Ensure the text is clear, readable, and free from grammatical errors.\n- Avoid awkward phrasing or repetition. \n\nWorker Output: The University of Burgundy has 16,800 undergraduate students and 9,400 postgraduate students.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear and organized textual format (e.g., a paragraph or a list) that is suitable for surface realization. Ensure both data points are included and no information is omitted or added. \nAdditional Instruction: - Convert the ordered data about the University of Burgundy into a well-structured textual format.\n- You may use a paragraph or a list, but ensure the structure is clear and all information is present.\n- Do not add, omit, or alter any data.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Structured Content: \n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n- No prior guardrail feedback.\n- Task: Transform the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure both data points are clearly and accurately expressed, with no information omitted or added. \nAdditional Instruction: - Write a fluent and natural sentence or short paragraph that accurately conveys both the number of undergraduate and postgraduate students at the University of Burgundy.\n- Do not omit or add any information.\n- Ensure the text is clear, readable, and free from grammatical errors.\n- Avoid awkward phrasing or repetition.\n-- INPUT END --\n-- OUTPUT START --\nThe University of Burgundy has 16,800 undergraduate students and 9,400 postgraduate students.\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "The University of Burgundy has 16,800 undergraduate students and 9,400 postgraduate students.",
            "rationale": null
        }
    ]
}