{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\nOutput: ",
    "final_response": "The University of Burgundy, located in France, has 9,400 postgraduate students.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about the University of Burgundy into a logical order that will support a coherent and natural narrative in the final text. Do not omit any information or add any new facts.', instruction='- Review the two facts about the University of Burgundy.\n- Arrange them in an order that would make sense for a short, informative text (e.g., typically, general information such as location/country is presented before specific statistics).\n- Output the ordered list of facts, ensuring both are included and no extra information is added.')",
            "rationale": "The user has provided two RDF triples about the University of Burgundy: its number of postgraduate students (9400) and its country (France). According to the workflow, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should ensure both facts are included and arranged in a way that will support a natural, informative text in later stages. \nInstruction:\n- Review the two facts about the University of Burgundy.\n- Arrange them in an order that would make sense for a short, informative text (e.g., typically, general information such as location/country is presented before specific statistics).\n- Output the ordered list of facts, ensuring both are included and no extra information is added."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about the University of Burgundy into a logical order that will support a coherent and natural narrative in the final text. Do not omit any information or add any new facts. \nAdditional Instruction: - Review the two facts about the University of Burgundy.\n- Arrange them in an order that would make sense for a short, informative text (e.g., typically, general information such as location/country is presented before specific statistics).\n- Output the ordered list of facts, ensuring both are included and no extra information is added.",
            "agent_output": [
                "University_of_Burgundy | country | France",
                "University_of_Burgundy | numberOfPostgraduateStudents | 9400"
            ],
            "rationale": [
                "University_of_Burgundy | country | France",
                "University_of_Burgundy | numberOfPostgraduateStudents | 9400"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided two RDF triples about the University of Burgundy: its number of postgraduate students (9400) and its country (France). According to the workflow, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should ensure both facts are included and arranged in a way that will support a natural, informative text in later stages. \nInstruction:\n- Review the two facts about the University of Burgundy.\n- Arrange them in an order that would make sense for a short, informative text (e.g., typically, general information such as location/country is presented before specific statistics).\n- Output the ordered list of facts, ensuring both are included and no extra information is added. \n\nWorker Input: - Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about the University of Burgundy into a logical order that will support a coherent and natural narrative in the final text. Do not omit any information or add any new facts.', instruction='- Review the two facts about the University of Burgundy.\n- Arrange them in an order that would make sense for a short, informative text (e.g., typically, general information such as location/country is presented before specific statistics).\n- Output the ordered list of facts, ensuring both are included and no extra information is added. \n\nWorker Output: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about the University of Burgundy into a logical order that will support a coherent and natural narrative in the final text. Do not omit any information or add any new facts.', instruction='- Review the two facts about the University of Burgundy.\n- Arrange them in an order that would make sense for a short, informative text (e.g., typically, general information such as location/country is presented before specific statistics).\n- Output the ordered list of facts, ensuring both are included and no extra information is added.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts about the University of Burgundy into a logical order that will support a coherent and natural narrative in the final text. Do not omit any information or add any new facts. \nAdditional Instruction: - Review the two facts about the University of Burgundy.\n- Arrange them in an order that would make sense for a short, informative text (e.g., typically, general information such as location/country is presented before specific statistics).\n- Output the ordered list of facts, ensuring both are included and no extra information is added.\n-- INPUT END --\n-- OUTPUT START --\n['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will serve as the basis for fluent natural language generation. Ensure that both facts are included and that no information is omitted or added.', instruction='- Use the ordered facts to create a structured text outline or template (such as a sentence skeleton or paragraph plan).\n- Ensure the structure is suitable for expressing both the country and the number of postgraduate students at the University of Burgundy.\n- Do not add any information not present in the data.\n- Output the structured text in a way that clearly shows how the facts will be combined in the final sentence or paragraph.')",
            "rationale": "The content ordering stage has been completed correctly, as confirmed by the guardrail feedback ('CORRECT'). The facts are now logically ordered, with the general information (country) preceding the specific statistic (number of postgraduate students). The next step in the pipeline is text structuring, where these ordered facts will be organized into a coherent textual structure, such as a sentence or paragraph, in preparation for surface realization. I will provide the text structuring worker with the original data, the ordered facts, and clear instructions to ensure all information is included and no extra content is invented. \nInstruction:\n- Use the ordered facts to create a structured text outline or template (such as a sentence skeleton or paragraph plan).\n- Ensure the structure is suitable for expressing both the country and the number of postgraduate students at the University of Burgundy.\n- Do not add any information not present in the data.\n- Output the structured text in a way that clearly shows how the facts will be combined in the final sentence or paragraph."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will serve as the basis for fluent natural language generation. Ensure that both facts are included and that no information is omitted or added. \nAdditional Instruction: - Use the ordered facts to create a structured text outline or template (such as a sentence skeleton or paragraph plan).\n- Ensure the structure is suitable for expressing both the country and the number of postgraduate students at the University of Burgundy.\n- Do not add any information not present in the data.\n- Output the structured text in a way that clearly shows how the facts will be combined in the final sentence or paragraph.",
            "agent_output": "<paragraph>\n  <snt>\n    University_of_Burgundy | country | France\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    University_of_Burgundy | country | France\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed correctly, as confirmed by the guardrail feedback ('CORRECT'). The facts are now logically ordered, with the general information (country) preceding the specific statistic (number of postgraduate students). The next step in the pipeline is text structuring, where these ordered facts will be organized into a coherent textual structure, such as a sentence or paragraph, in preparation for surface realization. I will provide the text structuring worker with the original data, the ordered facts, and clear instructions to ensure all information is included and no extra content is invented. \nInstruction:\n- Use the ordered facts to create a structured text outline or template (such as a sentence skeleton or paragraph plan).\n- Ensure the structure is suitable for expressing both the country and the number of postgraduate students at the University of Burgundy.\n- Do not add any information not present in the data.\n- Output the structured text in a way that clearly shows how the facts will be combined in the final sentence or paragraph. \n\nWorker Input: - Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will serve as the basis for fluent natural language generation. Ensure that both facts are included and that no information is omitted or added.', instruction='- Use the ordered facts to create a structured text outline or template (such as a sentence skeleton or paragraph plan).\n- Ensure the structure is suitable for expressing both the country and the number of postgraduate students at the University of Burgundy.\n- Do not add any information not present in the data.\n- Output the structured text in a way that clearly shows how the facts will be combined in the final sentence or paragraph. \n\nWorker Output: <paragraph>\n  <snt>\n    University_of_Burgundy | country | France\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will serve as the basis for fluent natural language generation. Ensure that both facts are included and that no information is omitted or added.', instruction='- Use the ordered facts to create a structured text outline or template (such as a sentence skeleton or paragraph plan).\n- Ensure the structure is suitable for expressing both the country and the number of postgraduate students at the University of Burgundy.\n- Do not add any information not present in the data.\n- Output the structured text in a way that clearly shows how the facts will be combined in the final sentence or paragraph.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will serve as the basis for fluent natural language generation. Ensure that both facts are included and that no information is omitted or added. \nAdditional Instruction: - Use the ordered facts to create a structured text outline or template (such as a sentence skeleton or paragraph plan).\n- Ensure the structure is suitable for expressing both the country and the number of postgraduate students at the University of Burgundy.\n- Do not add any information not present in the data.\n- Output the structured text in a way that clearly shows how the facts will be combined in the final sentence or paragraph.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    University_of_Burgundy | country | France\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Structured Text:\n<paragraph>\n  <snt>\n    University_of_Burgundy | country | France\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n- No prior guardrail feedback for this stage.\n- Task: Convert the structured text into a fluent, natural, and grammatically correct sentence or short paragraph. Ensure that both facts (the country and the number of postgraduate students at the University of Burgundy) are clearly and accurately expressed. Do not omit any information or add any details not present in the data.', instruction='- Write a single, coherent sentence or short paragraph that includes both the location (France) and the number of postgraduate students (9400) at the University of Burgundy.\n- Ensure the text is fluent, clear, and free from grammatical errors.\n- Do not add any information not present in the data.\n- The final output should be ready for presentation to an end user.')",
            "rationale": "The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured text includes all required facts and is logically organized. The next step in the pipeline is surface realization, where the structured content will be transformed into a fluent, natural, and grammatically correct sentence or paragraph. I will provide the original data, the ordered facts, the structured text, and clear instructions to ensure the final output is accurate, complete, and free from hallucinations. \nInstruction:\n- Write a single, coherent sentence or short paragraph that includes both the location (France) and the number of postgraduate students (9400) at the University of Burgundy.\n- Ensure the text is fluent, clear, and free from grammatical errors.\n- Do not add any information not present in the data.\n- The final output should be ready for presentation to an end user."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Structured Text:\n<paragraph>\n  <snt>\n    University_of_Burgundy | country | France\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n- No prior guardrail feedback for this stage.\n- Task: Convert the structured text into a fluent, natural, and grammatically correct sentence or short paragraph. Ensure that both facts (the country and the number of postgraduate students at the University of Burgundy) are clearly and accurately expressed. Do not omit any information or add any details not present in the data. \nAdditional Instruction: - Write a single, coherent sentence or short paragraph that includes both the location (France) and the number of postgraduate students (9400) at the University of Burgundy.\n- Ensure the text is fluent, clear, and free from grammatical errors.\n- Do not add any information not present in the data.\n- The final output should be ready for presentation to an end user.",
            "agent_output": "The University of Burgundy, located in France, has 9,400 postgraduate students.",
            "rationale": "The University of Burgundy, located in France, has 9,400 postgraduate students."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured text includes all required facts and is logically organized. The next step in the pipeline is surface realization, where the structured content will be transformed into a fluent, natural, and grammatically correct sentence or paragraph. I will provide the original data, the ordered facts, the structured text, and clear instructions to ensure the final output is accurate, complete, and free from hallucinations. \nInstruction:\n- Write a single, coherent sentence or short paragraph that includes both the location (France) and the number of postgraduate students (9400) at the University of Burgundy.\n- Ensure the text is fluent, clear, and free from grammatical errors.\n- Do not add any information not present in the data.\n- The final output should be ready for presentation to an end user. \n\nWorker Input: - Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Structured Text:\n<paragraph>\n  <snt>\n    University_of_Burgundy | country | France\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n- No prior guardrail feedback for this stage.\n- Task: Convert the structured text into a fluent, natural, and grammatically correct sentence or short paragraph. Ensure that both facts (the country and the number of postgraduate students at the University of Burgundy) are clearly and accurately expressed. Do not omit any information or add any details not present in the data.', instruction='- Write a single, coherent sentence or short paragraph that includes both the location (France) and the number of postgraduate students (9400) at the University of Burgundy.\n- Ensure the text is fluent, clear, and free from grammatical errors.\n- Do not add any information not present in the data.\n- The final output should be ready for presentation to an end user. \n\nWorker Output: The University of Burgundy, located in France, has 9,400 postgraduate students.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- No prior pipeline results or guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will serve as the basis for fluent natural language generation. Ensure that both facts are included and that no information is omitted or added. \nAdditional Instruction: - Use the ordered facts to create a structured text outline or template (such as a sentence skeleton or paragraph plan).\n- Ensure the structure is suitable for expressing both the country and the number of postgraduate students at the University of Burgundy.\n- Do not add any information not present in the data.\n- Output the structured text in a way that clearly shows how the facts will be combined in the final sentence or paragraph.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    University_of_Burgundy | country | France\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfPostgraduateStudents | 9400', 'University_of_Burgundy | country | France']\n- Ordered Facts: ['University_of_Burgundy | country | France', 'University_of_Burgundy | numberOfPostgraduateStudents | 9400']\n- Structured Text:\n<paragraph>\n  <snt>\n    University_of_Burgundy | country | France\n    University_of_Burgundy | numberOfPostgraduateStudents | 9400\n  </snt>\n</paragraph>\n- No prior guardrail feedback for this stage.\n- Task: Convert the structured text into a fluent, natural, and grammatically correct sentence or short paragraph. Ensure that both facts (the country and the number of postgraduate students at the University of Burgundy) are clearly and accurately expressed. Do not omit any information or add any details not present in the data. \nAdditional Instruction: - Write a single, coherent sentence or short paragraph that includes both the location (France) and the number of postgraduate students (9400) at the University of Burgundy.\n- Ensure the text is fluent, clear, and free from grammatical errors.\n- Do not add any information not present in the data.\n- The final output should be ready for presentation to an end user.\n-- INPUT END --\n-- OUTPUT START --\nThe University of Burgundy, located in France, has 9,400 postgraduate students.\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "The University of Burgundy, located in France, has 9,400 postgraduate students.",
            "rationale": null
        }
    ]
}