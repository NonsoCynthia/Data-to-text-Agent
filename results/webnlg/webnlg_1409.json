{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\nOutput: ",
    "final_response": "Cyril Frankel, who was born in the United Kingdom, is the director of the film \"It's Great to Be Young\" (1956).",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts into a logical order for a coherent narrative. The output should be a sequence of content points that will guide the next stage (Text Structuring).', instruction='- Review the two facts and determine the most logical order for presenting them in a short, coherent text.\n- Typically, start by introducing the film, then mention its director, and finally provide background information about the director.\n- Output the ordered content points as a list, ensuring no information is omitted or added.')",
            "rationale": "The user has provided two RDF triples from the WebNLG dataset. The first triple states that \"It's Great to Be Young (1956 film)\" was directed by Cyril Frankel, and the second triple states that Cyril Frankel was born in the United Kingdom. According to the workflow policy, the first step is Content Ordering, where I need to organize these facts into a logical narrative sequence. There is no prior pipeline history or guardrail feedback, so I will proceed to assign the 'content ordering' worker. The worker should ensure that the information is ordered in a way that introduces the film, its director, and then provides background on the director. \nInstruction:\n- Review the two facts and determine the most logical order for presenting them in a short, coherent text.\n- Typically, start by introducing the film, then mention its director, and finally provide background information about the director.\n- Output the ordered content points as a list, ensuring no information is omitted or added."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts into a logical order for a coherent narrative. The output should be a sequence of content points that will guide the next stage (Text Structuring). \nAdditional Instruction: - Review the two facts and determine the most logical order for presenting them in a short, coherent text.\n- Typically, start by introducing the film, then mention its director, and finally provide background information about the director.\n- Output the ordered content points as a list, ensuring no information is omitted or added.",
            "agent_output": [
                "It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel",
                "Cyril_Frankel | birthPlace | United_Kingdom"
            ],
            "rationale": [
                "It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel",
                "Cyril_Frankel | birthPlace | United_Kingdom"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided two RDF triples from the WebNLG dataset. The first triple states that \"It's Great to Be Young (1956 film)\" was directed by Cyril Frankel, and the second triple states that Cyril Frankel was born in the United Kingdom. According to the workflow policy, the first step is Content Ordering, where I need to organize these facts into a logical narrative sequence. There is no prior pipeline history or guardrail feedback, so I will proceed to assign the 'content ordering' worker. The worker should ensure that the information is ordered in a way that introduces the film, its director, and then provides background on the director. \nInstruction:\n- Review the two facts and determine the most logical order for presenting them in a short, coherent text.\n- Typically, start by introducing the film, then mention its director, and finally provide background information about the director.\n- Output the ordered content points as a list, ensuring no information is omitted or added. \n\nWorker Input: - Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts into a logical order for a coherent narrative. The output should be a sequence of content points that will guide the next stage (Text Structuring).', instruction='- Review the two facts and determine the most logical order for presenting them in a short, coherent text.\n- Typically, start by introducing the film, then mention its director, and finally provide background information about the director.\n- Output the ordered content points as a list, ensuring no information is omitted or added. \n\nWorker Output: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts into a logical order for a coherent narrative. The output should be a sequence of content points that will guide the next stage (Text Structuring).', instruction='- Review the two facts and determine the most logical order for presenting them in a short, coherent text.\n- Typically, start by introducing the film, then mention its director, and finally provide background information about the director.\n- Output the ordered content points as a list, ensuring no information is omitted or added.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\n- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided facts into a logical order for a coherent narrative. The output should be a sequence of content points that will guide the next stage (Text Structuring). \nAdditional Instruction: - Review the two facts and determine the most logical order for presenting them in a short, coherent text.\n- Typically, start by introducing the film, then mention its director, and finally provide background information about the director.\n- Output the ordered content points as a list, ensuring no information is omitted or added.\n-- INPUT END --\n-- OUTPUT START --\n[\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Ordered Content Points: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior guardrail feedback requiring correction.\n- Task: Organize the ordered content points into a clear, logical textual structure (e.g., a paragraph or list) that will serve as the basis for fluent text generation in the next stage. Ensure all information is included and clearly connected.', instruction='- Use the ordered content points to create a structured text outline or paragraph.\n- Ensure the structure is logical and that each fact is clearly presented and connected.\n- Do not omit any information or add any new details.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.')",
            "rationale": "The content ordering stage has been completed and validated as correct by the guardrail feedback. The next step in the pipeline is text structuring. The text structuring worker should take the logically ordered content points and organize them into a clear textual structure, such as a paragraph, ensuring all information is included and ready for surface realization. There are no errors or omissions, so we can proceed directly. \nInstruction:\n- Use the ordered content points to create a structured text outline or paragraph.\n- Ensure the structure is logical and that each fact is clearly presented and connected.\n- Do not omit any information or add any new details.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Ordered Content Points: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior guardrail feedback requiring correction.\n- Task: Organize the ordered content points into a clear, logical textual structure (e.g., a paragraph or list) that will serve as the basis for fluent text generation in the next stage. Ensure all information is included and clearly connected. \nAdditional Instruction: - Use the ordered content points to create a structured text outline or paragraph.\n- Ensure the structure is logical and that each fact is clearly presented and connected.\n- Do not omit any information or add any new details.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.",
            "agent_output": "<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\n    Cyril_Frankel | birthPlace | United_Kingdom\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\n    Cyril_Frankel | birthPlace | United_Kingdom\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed and validated as correct by the guardrail feedback. The next step in the pipeline is text structuring. The text structuring worker should take the logically ordered content points and organize them into a clear textual structure, such as a paragraph, ensuring all information is included and ready for surface realization. There are no errors or omissions, so we can proceed directly. \nInstruction:\n- Use the ordered content points to create a structured text outline or paragraph.\n- Ensure the structure is logical and that each fact is clearly presented and connected.\n- Do not omit any information or add any new details.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness. \n\nWorker Input: - Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Ordered Content Points: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior guardrail feedback requiring correction.\n- Task: Organize the ordered content points into a clear, logical textual structure (e.g., a paragraph or list) that will serve as the basis for fluent text generation in the next stage. Ensure all information is included and clearly connected.', instruction='- Use the ordered content points to create a structured text outline or paragraph.\n- Ensure the structure is logical and that each fact is clearly presented and connected.\n- Do not omit any information or add any new details.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness. \n\nWorker Output: <paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\n    Cyril_Frankel | birthPlace | United_Kingdom\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Ordered Content Points: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior guardrail feedback requiring correction.\n- Task: Organize the ordered content points into a clear, logical textual structure (e.g., a paragraph or list) that will serve as the basis for fluent text generation in the next stage. Ensure all information is included and clearly connected.', instruction='- Use the ordered content points to create a structured text outline or paragraph.\n- Ensure the structure is logical and that each fact is clearly presented and connected.\n- Do not omit any information or add any new details.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Ordered Content Points: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior guardrail feedback requiring correction.\n- Task: Organize the ordered content points into a clear, logical textual structure (e.g., a paragraph or list) that will serve as the basis for fluent text generation in the next stage. Ensure all information is included and clearly connected. \nAdditional Instruction: - Use the ordered content points to create a structured text outline or paragraph.\n- Ensure the structure is logical and that each fact is clearly presented and connected.\n- Do not omit any information or add any new details.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\n    Cyril_Frankel | birthPlace | United_Kingdom\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Structured Content: \n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\n    Cyril_Frankel | birthPlace | United_Kingdom\n  </snt>\n</paragraph>\n- Guardrail Feedback: Previous stage output is CORRECT.\n- Task: Convert the structured content into fluent, natural English text. Ensure all information from the original data is included, clearly and accurately, without adding or omitting any facts.', instruction='- Transform the structured content into a well-formed, fluent English sentence or short paragraph.\n- Clearly state that Cyril Frankel is the director of \"It's Great to Be Young (1956 film)\" and that he was born in the United Kingdom.\n- Do not add any information not present in the original data.\n- Ensure the text is grammatically correct, coherent, and easy to read.')",
            "rationale": "The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is logically organized and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and clear instructions to ensure all information is included, no hallucinations occur, and the output is fluent and readable. \nInstruction:\n- Transform the structured content into a well-formed, fluent English sentence or short paragraph.\n- Clearly state that Cyril Frankel is the director of \"It's Great to Be Young (1956 film)\" and that he was born in the United Kingdom.\n- Do not add any information not present in the original data.\n- Ensure the text is grammatically correct, coherent, and easy to read."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Structured Content: \n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\n    Cyril_Frankel | birthPlace | United_Kingdom\n  </snt>\n</paragraph>\n- Guardrail Feedback: Previous stage output is CORRECT.\n- Task: Convert the structured content into fluent, natural English text. Ensure all information from the original data is included, clearly and accurately, without adding or omitting any facts. \nAdditional Instruction: - Transform the structured content into a well-formed, fluent English sentence or short paragraph.\n- Clearly state that Cyril Frankel is the director of \"It's Great to Be Young (1956 film)\" and that he was born in the United Kingdom.\n- Do not add any information not present in the original data.\n- Ensure the text is grammatically correct, coherent, and easy to read.",
            "agent_output": "Cyril Frankel, who was born in the United Kingdom, is the director of the film \"It's Great to Be Young\" (1956).",
            "rationale": "Cyril Frankel, who was born in the United Kingdom, is the director of the film \"It's Great to Be Young\" (1956)."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is logically organized and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and clear instructions to ensure all information is included, no hallucinations occur, and the output is fluent and readable. \nInstruction:\n- Transform the structured content into a well-formed, fluent English sentence or short paragraph.\n- Clearly state that Cyril Frankel is the director of \"It's Great to Be Young (1956 film)\" and that he was born in the United Kingdom.\n- Do not add any information not present in the original data.\n- Ensure the text is grammatically correct, coherent, and easy to read. \n\nWorker Input: - Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Structured Content: \n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\n    Cyril_Frankel | birthPlace | United_Kingdom\n  </snt>\n</paragraph>\n- Guardrail Feedback: Previous stage output is CORRECT.\n- Task: Convert the structured content into fluent, natural English text. Ensure all information from the original data is included, clearly and accurately, without adding or omitting any facts.', instruction='- Transform the structured content into a well-formed, fluent English sentence or short paragraph.\n- Clearly state that Cyril Frankel is the director of \"It's Great to Be Young (1956 film)\" and that he was born in the United Kingdom.\n- Do not add any information not present in the original data.\n- Ensure the text is grammatically correct, coherent, and easy to read. \n\nWorker Output: Cyril Frankel, who was born in the United Kingdom, is the director of the film \"It's Great to Be Young\" (1956).\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Ordered Content Points: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- No prior guardrail feedback requiring correction.\n- Task: Organize the ordered content points into a clear, logical textual structure (e.g., a paragraph or list) that will serve as the basis for fluent text generation in the next stage. Ensure all information is included and clearly connected. \nAdditional Instruction: - Use the ordered content points to create a structured text outline or paragraph.\n- Ensure the structure is logical and that each fact is clearly presented and connected.\n- Do not omit any information or add any new details.\n- Prepare the output so it is ready for the surface realization stage, focusing on clarity and completeness.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\n    Cyril_Frankel | birthPlace | United_Kingdom\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\n- Original Data: [\"It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\", 'Cyril_Frankel | birthPlace | United_Kingdom']\n- Structured Content: \n<paragraph>\n  <snt>\n    It's_Great_to_Be_Young_(1956_film) | director | Cyril_Frankel\n    Cyril_Frankel | birthPlace | United_Kingdom\n  </snt>\n</paragraph>\n- Guardrail Feedback: Previous stage output is CORRECT.\n- Task: Convert the structured content into fluent, natural English text. Ensure all information from the original data is included, clearly and accurately, without adding or omitting any facts. \nAdditional Instruction: - Transform the structured content into a well-formed, fluent English sentence or short paragraph.\n- Clearly state that Cyril Frankel is the director of \"It's Great to Be Young (1956 film)\" and that he was born in the United Kingdom.\n- Do not add any information not present in the original data.\n- Ensure the text is grammatically correct, coherent, and easy to read.\n-- INPUT END --\n-- OUTPUT START --\nCyril Frankel, who was born in the United Kingdom, is the director of the film \"It's Great to Be Young\" (1956).\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "Cyril Frankel, who was born in the United Kingdom, is the director of the film \"It's Great to Be Young\" (1956).",
            "rationale": null
        }
    ]
}