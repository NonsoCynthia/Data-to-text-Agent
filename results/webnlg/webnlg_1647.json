{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\nOutput: ",
    "final_response": "The University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence for a coherent narrative. Ensure both data points are included and no information is omitted or added.', instruction='- Review the two data triples.\n- Determine the most logical order for presenting the information (e.g., undergraduate students first, then doctoral students).\n- Output the ordered content as a list or sequence, ready for the next stage (Text Structuring).\n- Do not omit any data or introduce new information.')",
            "rationale": "The user has provided structured data in the form of triples, indicating the number of undergraduate and doctoral students at the University of Burgundy. According to the workflow policy, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. There is no prior pipeline history or guardrail feedback, so I will proceed to assign the 'content ordering' worker. The worker should ensure both data points are included and logically ordered, likely starting with the undergraduate student count followed by the doctoral student count. \nInstruction:\n- Review the two data triples.\n- Determine the most logical order for presenting the information (e.g., undergraduate students first, then doctoral students).\n- Output the ordered content as a list or sequence, ready for the next stage (Text Structuring).\n- Do not omit any data or introduce new information."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence for a coherent narrative. Ensure both data points are included and no information is omitted or added. \nAdditional Instruction: - Review the two data triples.\n- Determine the most logical order for presenting the information (e.g., undergraduate students first, then doctoral students).\n- Output the ordered content as a list or sequence, ready for the next stage (Text Structuring).\n- Do not omit any data or introduce new information.",
            "agent_output": [
                "University_of_Burgundy | numberOfUndergraduateStudents | 16800",
                "University_of_Burgundy | numberOfDoctoralStudents | 1299"
            ],
            "rationale": [
                "University_of_Burgundy | numberOfUndergraduateStudents | 16800",
                "University_of_Burgundy | numberOfDoctoralStudents | 1299"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided structured data in the form of triples, indicating the number of undergraduate and doctoral students at the University of Burgundy. According to the workflow policy, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. There is no prior pipeline history or guardrail feedback, so I will proceed to assign the 'content ordering' worker. The worker should ensure both data points are included and logically ordered, likely starting with the undergraduate student count followed by the doctoral student count. \nInstruction:\n- Review the two data triples.\n- Determine the most logical order for presenting the information (e.g., undergraduate students first, then doctoral students).\n- Output the ordered content as a list or sequence, ready for the next stage (Text Structuring).\n- Do not omit any data or introduce new information. \n\nWorker Input: - Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence for a coherent narrative. Ensure both data points are included and no information is omitted or added.', instruction='- Review the two data triples.\n- Determine the most logical order for presenting the information (e.g., undergraduate students first, then doctoral students).\n- Output the ordered content as a list or sequence, ready for the next stage (Text Structuring).\n- Do not omit any data or introduce new information. \n\nWorker Output: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence for a coherent narrative. Ensure both data points are included and no information is omitted or added.', instruction='- Review the two data triples.\n- Determine the most logical order for presenting the information (e.g., undergraduate students first, then doctoral students).\n- Output the ordered content as a list or sequence, ready for the next stage (Text Structuring).\n- Do not omit any data or introduce new information.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence for a coherent narrative. Ensure both data points are included and no information is omitted or added. \nAdditional Instruction: - Review the two data triples.\n- Determine the most logical order for presenting the information (e.g., undergraduate students first, then doctoral students).\n- Output the ordered content as a list or sequence, ready for the next stage (Text Structuring).\n- Do not omit any data or introduce new information.\n-- INPUT END --\n-- OUTPUT START --\n['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a paragraph or a list) that is ready for surface realization. Ensure both data points are included, and do not omit or add any information.', instruction='- Transform the ordered data into a structured text format, such as a well-organized paragraph or bullet list.\n- Ensure both the number of undergraduate students and doctoral students at the University of Burgundy are clearly presented.\n- Do not introduce any new information or omit any data.\n- Prepare the output so it is ready for the final surface realization stage.')",
            "rationale": "The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The data is logically ordered, with undergraduate students presented before doctoral students, which is a standard and coherent approach. According to the workflow policy, I should now proceed to the next stage: Text Structuring. I will provide the original data, the ordered content, and clear instructions to ensure the worker structures the information into an organized textual format (such as a paragraph or list), without omitting or adding any information. \nInstruction:\n- Transform the ordered data into a structured text format, such as a well-organized paragraph or bullet list.\n- Ensure both the number of undergraduate students and doctoral students at the University of Burgundy are clearly presented.\n- Do not introduce any new information or omit any data.\n- Prepare the output so it is ready for the final surface realization stage."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a paragraph or a list) that is ready for surface realization. Ensure both data points are included, and do not omit or add any information. \nAdditional Instruction: - Transform the ordered data into a structured text format, such as a well-organized paragraph or bullet list.\n- Ensure both the number of undergraduate students and doctoral students at the University of Burgundy are clearly presented.\n- Do not introduce any new information or omit any data.\n- Prepare the output so it is ready for the final surface realization stage.",
            "agent_output": "<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfDoctoralStudents | 1299\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfDoctoralStudents | 1299\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The data is logically ordered, with undergraduate students presented before doctoral students, which is a standard and coherent approach. According to the workflow policy, I should now proceed to the next stage: Text Structuring. I will provide the original data, the ordered content, and clear instructions to ensure the worker structures the information into an organized textual format (such as a paragraph or list), without omitting or adding any information. \nInstruction:\n- Transform the ordered data into a structured text format, such as a well-organized paragraph or bullet list.\n- Ensure both the number of undergraduate students and doctoral students at the University of Burgundy are clearly presented.\n- Do not introduce any new information or omit any data.\n- Prepare the output so it is ready for the final surface realization stage. \n\nWorker Input: - Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a paragraph or a list) that is ready for surface realization. Ensure both data points are included, and do not omit or add any information.', instruction='- Transform the ordered data into a structured text format, such as a well-organized paragraph or bullet list.\n- Ensure both the number of undergraduate students and doctoral students at the University of Burgundy are clearly presented.\n- Do not introduce any new information or omit any data.\n- Prepare the output so it is ready for the final surface realization stage. \n\nWorker Output: <paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfDoctoralStudents | 1299\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a paragraph or a list) that is ready for surface realization. Ensure both data points are included, and do not omit or add any information.', instruction='- Transform the ordered data into a structured text format, such as a well-organized paragraph or bullet list.\n- Ensure both the number of undergraduate students and doctoral students at the University of Burgundy are clearly presented.\n- Do not introduce any new information or omit any data.\n- Prepare the output so it is ready for the final surface realization stage.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a paragraph or a list) that is ready for surface realization. Ensure both data points are included, and do not omit or add any information. \nAdditional Instruction: - Transform the ordered data into a structured text format, such as a well-organized paragraph or bullet list.\n- Ensure both the number of undergraduate students and doctoral students at the University of Burgundy are clearly presented.\n- Do not introduce any new information or omit any data.\n- Prepare the output so it is ready for the final surface realization stage.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfDoctoralStudents | 1299\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Structured Content: \n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfDoctoralStudents | 1299\n  </snt>\n</paragraph>\n- Guardrail Feedback: CORRECT (previous stage)\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure both data points (number of undergraduate students and doctoral students at the University of Burgundy) are clearly and accurately presented. Do not omit any information or introduce new content.', instruction='- Transform the structured content into a well-formed, natural English sentence or short paragraph.\n- Clearly state that the University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.\n- Ensure the text is fluent, coherent, and free from grammatical errors.\n- Do not add or omit any information from the original data.')",
            "rationale": "The text structuring stage has been completed, and the guardrail feedback is 'CORRECT', indicating that the structured content is accurate and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and clear instructions to ensure the final output is grammatically correct, readable, and does not omit or add any information. \nInstruction:\n- Transform the structured content into a well-formed, natural English sentence or short paragraph.\n- Clearly state that the University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.\n- Ensure the text is fluent, coherent, and free from grammatical errors.\n- Do not add or omit any information from the original data."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Structured Content: \n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfDoctoralStudents | 1299\n  </snt>\n</paragraph>\n- Guardrail Feedback: CORRECT (previous stage)\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure both data points (number of undergraduate students and doctoral students at the University of Burgundy) are clearly and accurately presented. Do not omit any information or introduce new content. \nAdditional Instruction: - Transform the structured content into a well-formed, natural English sentence or short paragraph.\n- Clearly state that the University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.\n- Ensure the text is fluent, coherent, and free from grammatical errors.\n- Do not add or omit any information from the original data.",
            "agent_output": "The University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.",
            "rationale": "The University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed, and the guardrail feedback is 'CORRECT', indicating that the structured content is accurate and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and clear instructions to ensure the final output is grammatically correct, readable, and does not omit or add any information. \nInstruction:\n- Transform the structured content into a well-formed, natural English sentence or short paragraph.\n- Clearly state that the University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.\n- Ensure the text is fluent, coherent, and free from grammatical errors.\n- Do not add or omit any information from the original data. \n\nWorker Input: - Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Structured Content: \n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfDoctoralStudents | 1299\n  </snt>\n</paragraph>\n- Guardrail Feedback: CORRECT (previous stage)\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure both data points (number of undergraduate students and doctoral students at the University of Burgundy) are clearly and accurately presented. Do not omit any information or introduce new content.', instruction='- Transform the structured content into a well-formed, natural English sentence or short paragraph.\n- Clearly state that the University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.\n- Ensure the text is fluent, coherent, and free from grammatical errors.\n- Do not add or omit any information from the original data. \n\nWorker Output: The University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Ordered Content: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- No prior guardrail feedback.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a paragraph or a list) that is ready for surface realization. Ensure both data points are included, and do not omit or add any information. \nAdditional Instruction: - Transform the ordered data into a structured text format, such as a well-organized paragraph or bullet list.\n- Ensure both the number of undergraduate students and doctoral students at the University of Burgundy are clearly presented.\n- Do not introduce any new information or omit any data.\n- Prepare the output so it is ready for the final surface realization stage.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfDoctoralStudents | 1299\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\n- Original Data: ['University_of_Burgundy | numberOfUndergraduateStudents | 16800', 'University_of_Burgundy | numberOfDoctoralStudents | 1299']\n- Structured Content: \n<paragraph>\n  <snt>\n    University_of_Burgundy | numberOfUndergraduateStudents | 16800\n    University_of_Burgundy | numberOfDoctoralStudents | 1299\n  </snt>\n</paragraph>\n- Guardrail Feedback: CORRECT (previous stage)\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure both data points (number of undergraduate students and doctoral students at the University of Burgundy) are clearly and accurately presented. Do not omit any information or introduce new content. \nAdditional Instruction: - Transform the structured content into a well-formed, natural English sentence or short paragraph.\n- Clearly state that the University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.\n- Ensure the text is fluent, coherent, and free from grammatical errors.\n- Do not add or omit any information from the original data.\n-- INPUT END --\n-- OUTPUT START --\nThe University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "The University of Burgundy has 16,800 undergraduate students and 1,299 doctoral students.",
            "rationale": null
        }
    ]
}