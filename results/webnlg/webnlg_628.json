{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\nOutput: ",
    "final_response": "Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that will support a coherent and complete narrative in the final text. Ensure that both facts are included and that the order supports natural text structuring in the next stage.', instruction='- Review the two data triples and determine the most logical sequence for presenting this information in text.\n- Typically, general information (such as location) precedes more specific identifiers (such as ICAO codes).\n- Output the ordered list of facts, ensuring no information is omitted or added.')",
            "rationale": "The user has provided two RDF triples from the WebNLG dataset: one indicating the location of Bedford Aerodrome (Thurleigh), and the other specifying its ICAO location identifier (EGBF). According to the workflow policy, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should ensure that both facts are included and logically ordered, with no omissions or hallucinations. \nInstruction:\n- Review the two data triples and determine the most logical sequence for presenting this information in text.\n- Typically, general information (such as location) precedes more specific identifiers (such as ICAO codes).\n- Output the ordered list of facts, ensuring no information is omitted or added."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that will support a coherent and complete narrative in the final text. Ensure that both facts are included and that the order supports natural text structuring in the next stage. \nAdditional Instruction: - Review the two data triples and determine the most logical sequence for presenting this information in text.\n- Typically, general information (such as location) precedes more specific identifiers (such as ICAO codes).\n- Output the ordered list of facts, ensuring no information is omitted or added.",
            "agent_output": [
                "Bedford_Aerodrome | location | Thurleigh",
                "Bedford_Aerodrome | icaoLocationIdentifier | EGBF"
            ],
            "rationale": [
                "Bedford_Aerodrome | location | Thurleigh",
                "Bedford_Aerodrome | icaoLocationIdentifier | EGBF"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided two RDF triples from the WebNLG dataset: one indicating the location of Bedford Aerodrome (Thurleigh), and the other specifying its ICAO location identifier (EGBF). According to the workflow policy, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No prior pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should ensure that both facts are included and logically ordered, with no omissions or hallucinations. \nInstruction:\n- Review the two data triples and determine the most logical sequence for presenting this information in text.\n- Typically, general information (such as location) precedes more specific identifiers (such as ICAO codes).\n- Output the ordered list of facts, ensuring no information is omitted or added. \n\nWorker Input: - Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that will support a coherent and complete narrative in the final text. Ensure that both facts are included and that the order supports natural text structuring in the next stage.', instruction='- Review the two data triples and determine the most logical sequence for presenting this information in text.\n- Typically, general information (such as location) precedes more specific identifiers (such as ICAO codes).\n- Output the ordered list of facts, ensuring no information is omitted or added. \n\nWorker Output: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that will support a coherent and complete narrative in the final text. Ensure that both facts are included and that the order supports natural text structuring in the next stage.', instruction='- Review the two data triples and determine the most logical sequence for presenting this information in text.\n- Typically, general information (such as location) precedes more specific identifiers (such as ICAO codes).\n- Output the ordered list of facts, ensuring no information is omitted or added.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\n- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical order that will support a coherent and complete narrative in the final text. Ensure that both facts are included and that the order supports natural text structuring in the next stage. \nAdditional Instruction: - Review the two data triples and determine the most logical sequence for presenting this information in text.\n- Typically, general information (such as location) precedes more specific identifiers (such as ICAO codes).\n- Output the ordered list of facts, ensuring no information is omitted or added.\n-- INPUT END --\n-- OUTPUT START --\n['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Ordered Facts: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will facilitate fluent and complete surface realization in the next stage. Ensure that both facts are included and that the structure supports natural language flow.', instruction='- Combine the two ordered facts into a single, well-structured sentence or short paragraph.\n- Ensure that the location is introduced before the ICAO identifier.\n- Do not omit any information or add any extra details.\n- Prepare the output so it is ready for surface realization, maintaining clarity and logical flow.')",
            "rationale": "The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The facts are logically ordered, with the general location information preceding the more specific ICAO identifier. The next step in the pipeline is text structuring, where the ordered facts will be organized into a coherent textual structure, such as a sentence or paragraph, in preparation for surface realization. I will provide the text structuring worker with the original data, the ordered facts, and clear instructions to ensure all information is included and ready for fluent text generation in the next stage. \nInstruction:\n- Combine the two ordered facts into a single, well-structured sentence or short paragraph.\n- Ensure that the location is introduced before the ICAO identifier.\n- Do not omit any information or add any extra details.\n- Prepare the output so it is ready for surface realization, maintaining clarity and logical flow."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Ordered Facts: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will facilitate fluent and complete surface realization in the next stage. Ensure that both facts are included and that the structure supports natural language flow. \nAdditional Instruction: - Combine the two ordered facts into a single, well-structured sentence or short paragraph.\n- Ensure that the location is introduced before the ICAO identifier.\n- Do not omit any information or add any extra details.\n- Prepare the output so it is ready for surface realization, maintaining clarity and logical flow.",
            "agent_output": "<paragraph>\n  <snt>\n    Bedford_Aerodrome | location | Thurleigh\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    Bedford_Aerodrome | location | Thurleigh\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The facts are logically ordered, with the general location information preceding the more specific ICAO identifier. The next step in the pipeline is text structuring, where the ordered facts will be organized into a coherent textual structure, such as a sentence or paragraph, in preparation for surface realization. I will provide the text structuring worker with the original data, the ordered facts, and clear instructions to ensure all information is included and ready for fluent text generation in the next stage. \nInstruction:\n- Combine the two ordered facts into a single, well-structured sentence or short paragraph.\n- Ensure that the location is introduced before the ICAO identifier.\n- Do not omit any information or add any extra details.\n- Prepare the output so it is ready for surface realization, maintaining clarity and logical flow. \n\nWorker Input: - Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Ordered Facts: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will facilitate fluent and complete surface realization in the next stage. Ensure that both facts are included and that the structure supports natural language flow.', instruction='- Combine the two ordered facts into a single, well-structured sentence or short paragraph.\n- Ensure that the location is introduced before the ICAO identifier.\n- Do not omit any information or add any extra details.\n- Prepare the output so it is ready for surface realization, maintaining clarity and logical flow. \n\nWorker Output: <paragraph>\n  <snt>\n    Bedford_Aerodrome | location | Thurleigh\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Ordered Facts: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will facilitate fluent and complete surface realization in the next stage. Ensure that both facts are included and that the structure supports natural language flow.', instruction='- Combine the two ordered facts into a single, well-structured sentence or short paragraph.\n- Ensure that the location is introduced before the ICAO identifier.\n- Do not omit any information or add any extra details.\n- Prepare the output so it is ready for surface realization, maintaining clarity and logical flow.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Ordered Facts: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will facilitate fluent and complete surface realization in the next stage. Ensure that both facts are included and that the structure supports natural language flow. \nAdditional Instruction: - Combine the two ordered facts into a single, well-structured sentence or short paragraph.\n- Ensure that the location is introduced before the ICAO identifier.\n- Do not omit any information or add any extra details.\n- Prepare the output so it is ready for surface realization, maintaining clarity and logical flow.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Bedford_Aerodrome | location | Thurleigh\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Structured Content: \n  <paragraph>\n    <snt>\n      Bedford_Aerodrome | location | Thurleigh\n      Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    </snt>\n  </paragraph>\n- Guardrail Feedback: CORRECT (text structuring stage)\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure that both the location and ICAO identifier of Bedford Aerodrome are clearly and accurately conveyed. Do not omit any information or add any extra details.', instruction='- Produce a single, fluent sentence or short paragraph that states Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.\n- Ensure the output is clear, natural, and free of grammatical errors.\n- Do not add or omit any information from the original data.\n- The final text should be ready for user presentation.')",
            "rationale": "The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is logically organized and includes all required information. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and the guardrail feedback to the 'surface realization' worker, with clear instructions to produce a fluent, grammatically correct, and complete sentence that covers both facts without adding or omitting information. \nInstruction:\n- Produce a single, fluent sentence or short paragraph that states Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.\n- Ensure the output is clear, natural, and free of grammatical errors.\n- Do not add or omit any information from the original data.\n- The final text should be ready for user presentation."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Structured Content: \n  <paragraph>\n    <snt>\n      Bedford_Aerodrome | location | Thurleigh\n      Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    </snt>\n  </paragraph>\n- Guardrail Feedback: CORRECT (text structuring stage)\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure that both the location and ICAO identifier of Bedford Aerodrome are clearly and accurately conveyed. Do not omit any information or add any extra details. \nAdditional Instruction: - Produce a single, fluent sentence or short paragraph that states Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.\n- Ensure the output is clear, natural, and free of grammatical errors.\n- Do not add or omit any information from the original data.\n- The final text should be ready for user presentation.",
            "agent_output": "Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.",
            "rationale": "Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is logically organized and includes all required information. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and the guardrail feedback to the 'surface realization' worker, with clear instructions to produce a fluent, grammatically correct, and complete sentence that covers both facts without adding or omitting information. \nInstruction:\n- Produce a single, fluent sentence or short paragraph that states Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.\n- Ensure the output is clear, natural, and free of grammatical errors.\n- Do not add or omit any information from the original data.\n- The final text should be ready for user presentation. \n\nWorker Input: - Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Structured Content: \n  <paragraph>\n    <snt>\n      Bedford_Aerodrome | location | Thurleigh\n      Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    </snt>\n  </paragraph>\n- Guardrail Feedback: CORRECT (text structuring stage)\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure that both the location and ICAO identifier of Bedford Aerodrome are clearly and accurately conveyed. Do not omit any information or add any extra details.', instruction='- Produce a single, fluent sentence or short paragraph that states Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.\n- Ensure the output is clear, natural, and free of grammatical errors.\n- Do not add or omit any information from the original data.\n- The final text should be ready for user presentation. \n\nWorker Output: Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Ordered Facts: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- No prior guardrail feedback for this stage.\n- Task: Organize the ordered facts into a clear and logical textual structure (e.g., a single coherent sentence or a short paragraph) that will facilitate fluent and complete surface realization in the next stage. Ensure that both facts are included and that the structure supports natural language flow. \nAdditional Instruction: - Combine the two ordered facts into a single, well-structured sentence or short paragraph.\n- Ensure that the location is introduced before the ICAO identifier.\n- Do not omit any information or add any extra details.\n- Prepare the output so it is ready for surface realization, maintaining clarity and logical flow.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Bedford_Aerodrome | location | Thurleigh\n    Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\n- Original Data: ['Bedford_Aerodrome | location | Thurleigh', 'Bedford_Aerodrome | icaoLocationIdentifier | EGBF']\n- Structured Content: \n  <paragraph>\n    <snt>\n      Bedford_Aerodrome | location | Thurleigh\n      Bedford_Aerodrome | icaoLocationIdentifier | EGBF\n    </snt>\n  </paragraph>\n- Guardrail Feedback: CORRECT (text structuring stage)\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph. Ensure that both the location and ICAO identifier of Bedford Aerodrome are clearly and accurately conveyed. Do not omit any information or add any extra details. \nAdditional Instruction: - Produce a single, fluent sentence or short paragraph that states Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.\n- Ensure the output is clear, natural, and free of grammatical errors.\n- Do not add or omit any information from the original data.\n- The final text should be ready for user presentation.\n-- INPUT END --\n-- OUTPUT START --\nBedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "Bedford Aerodrome is located in Thurleigh and has the ICAO location identifier EGBF.",
            "rationale": null
        }
    ]
}