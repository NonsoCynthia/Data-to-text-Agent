{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\nOutput: ",
    "final_response": "Brandon Carter works in the field of general relativity and is known for the Carter constant.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\nOutput: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence that would form the basis for a coherent and natural narrative about Brandon Carter.', instruction='- Review the two data points about Brandon Carter.\n- Arrange the information in an order that would make sense in a natural, informative sentence or short paragraph.\n- Typically, start with the professional field, then mention what the person is known for.\n- Do not omit any data or add any information not present in the input.\n- Output the ordered content as a list or sequence, ready for the next stage.')",
            "rationale": "The user has provided two RDF triples about Brandon Carter: his professional field (General relativity) and what he is known for (Carter constant). According to the workflow, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No previous pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should organize the data to ensure a logical and natural flow, typically starting with the professional field and then mentioning what the person is known for. \nInstruction:\n- Review the two data points about Brandon Carter.\n- Arrange the information in an order that would make sense in a natural, informative sentence or short paragraph.\n- Typically, start with the professional field, then mention what the person is known for.\n- Do not omit any data or add any information not present in the input.\n- Output the ordered content as a list or sequence, ready for the next stage."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence that would form the basis for a coherent and natural narrative about Brandon Carter. \nAdditional Instruction: - Review the two data points about Brandon Carter.\n- Arrange the information in an order that would make sense in a natural, informative sentence or short paragraph.\n- Typically, start with the professional field, then mention what the person is known for.\n- Do not omit any data or add any information not present in the input.\n- Output the ordered content as a list or sequence, ready for the next stage.",
            "agent_output": [
                "Brandon_Carter | professionalField | General_relativity",
                "Brandon_Carter | knownFor | Carter_constant"
            ],
            "rationale": [
                "Brandon_Carter | professionalField | General_relativity",
                "Brandon_Carter | knownFor | Carter_constant"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided two RDF triples about Brandon Carter: his professional field (General relativity) and what he is known for (Carter constant). According to the workflow, the first step is Content Ordering, where the information should be logically sequenced to form a coherent narrative. No previous pipeline results or guardrail feedback exist yet, so I will proceed to assign the 'content ordering' worker. The worker should organize the data to ensure a logical and natural flow, typically starting with the professional field and then mentioning what the person is known for. \nInstruction:\n- Review the two data points about Brandon Carter.\n- Arrange the information in an order that would make sense in a natural, informative sentence or short paragraph.\n- Typically, start with the professional field, then mention what the person is known for.\n- Do not omit any data or add any information not present in the input.\n- Output the ordered content as a list or sequence, ready for the next stage. \n\nWorker Input: - Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence that would form the basis for a coherent and natural narrative about Brandon Carter.', instruction='- Review the two data points about Brandon Carter.\n- Arrange the information in an order that would make sense in a natural, informative sentence or short paragraph.\n- Typically, start with the professional field, then mention what the person is known for.\n- Do not omit any data or add any information not present in the input.\n- Output the ordered content as a list or sequence, ready for the next stage. \n\nWorker Output: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence that would form the basis for a coherent and natural narrative about Brandon Carter.', instruction='- Review the two data points about Brandon Carter.\n- Arrange the information in an order that would make sense in a natural, informative sentence or short paragraph.\n- Typically, start with the professional field, then mention what the person is known for.\n- Do not omit any data or add any information not present in the input.\n- Output the ordered content as a list or sequence, ready for the next stage.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:CONTENT ORDERING_2 ===##\n-- AGENT TYPE: content ordering\n-- AGENT NAME: content ordering\n-- INPUT START --\n- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior pipeline results or guardrail feedback.\n- Task: Organize the provided data into a logical sequence that would form the basis for a coherent and natural narrative about Brandon Carter. \nAdditional Instruction: - Review the two data points about Brandon Carter.\n- Arrange the information in an order that would make sense in a natural, informative sentence or short paragraph.\n- Typically, start with the professional field, then mention what the person is known for.\n- Do not omit any data or add any information not present in the input.\n- Output the ordered content as a list or sequence, ready for the next stage.\n-- INPUT END --\n-- OUTPUT START --\n['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n-- OUTPUT END --\n##=== END:CONTENT ORDERING_2 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Ordered Content: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a sentence or short paragraph) that presents all the information about Brandon Carter.\n- Requirements: Do not omit any data or add any information not present in the input. Ensure the structure is suitable for the next stage of surface realization.', instruction='- Combine the two data points into a single, logically structured sentence or short paragraph.\n- Begin with Brandon Carter's professional field, then state what he is known for.\n- Ensure all information is included and clearly presented.\n- Do not add, omit, or alter any facts from the input data.\n- Output the structured text in a format ready for surface realization.')",
            "rationale": "The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The data is logically sequenced, starting with Brandon Carter's professional field followed by what he is known for. The next step in the pipeline is text structuring, where the ordered content will be organized into a structured textual format (such as a sentence or short paragraph). I will provide the original data, the ordered content, and clear instructions to ensure all information is included and no hallucination occurs. \nInstruction:\n- Combine the two data points into a single, logically structured sentence or short paragraph.\n- Begin with Brandon Carter's professional field, then state what he is known for.\n- Ensure all information is included and clearly presented.\n- Do not add, omit, or alter any facts from the input data.\n- Output the structured text in a format ready for surface realization."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Ordered Content: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a sentence or short paragraph) that presents all the information about Brandon Carter.\n- Requirements: Do not omit any data or add any information not present in the input. Ensure the structure is suitable for the next stage of surface realization. \nAdditional Instruction: - Combine the two data points into a single, logically structured sentence or short paragraph.\n- Begin with Brandon Carter's professional field, then state what he is known for.\n- Ensure all information is included and clearly presented.\n- Do not add, omit, or alter any facts from the input data.\n- Output the structured text in a format ready for surface realization.",
            "agent_output": "<paragraph>\n  <snt>\n    Brandon_Carter | professionalField | General_relativity\n    Brandon_Carter | knownFor | Carter_constant\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    Brandon_Carter | professionalField | General_relativity\n    Brandon_Carter | knownFor | Carter_constant\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed correctly, as confirmed by the guardrail feedback labeled 'CORRECT'. The data is logically sequenced, starting with Brandon Carter's professional field followed by what he is known for. The next step in the pipeline is text structuring, where the ordered content will be organized into a structured textual format (such as a sentence or short paragraph). I will provide the original data, the ordered content, and clear instructions to ensure all information is included and no hallucination occurs. \nInstruction:\n- Combine the two data points into a single, logically structured sentence or short paragraph.\n- Begin with Brandon Carter's professional field, then state what he is known for.\n- Ensure all information is included and clearly presented.\n- Do not add, omit, or alter any facts from the input data.\n- Output the structured text in a format ready for surface realization. \n\nWorker Input: - Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Ordered Content: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a sentence or short paragraph) that presents all the information about Brandon Carter.\n- Requirements: Do not omit any data or add any information not present in the input. Ensure the structure is suitable for the next stage of surface realization.', instruction='- Combine the two data points into a single, logically structured sentence or short paragraph.\n- Begin with Brandon Carter's professional field, then state what he is known for.\n- Ensure all information is included and clearly presented.\n- Do not add, omit, or alter any facts from the input data.\n- Output the structured text in a format ready for surface realization. \n\nWorker Output: <paragraph>\n  <snt>\n    Brandon_Carter | professionalField | General_relativity\n    Brandon_Carter | knownFor | Carter_constant\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\nOutput: \nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Ordered Content: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a sentence or short paragraph) that presents all the information about Brandon Carter.\n- Requirements: Do not omit any data or add any information not present in the input. Ensure the structure is suitable for the next stage of surface realization.', instruction='- Combine the two data points into a single, logically structured sentence or short paragraph.\n- Begin with Brandon Carter's professional field, then state what he is known for.\n- Ensure all information is included and clearly presented.\n- Do not add, omit, or alter any facts from the input data.\n- Output the structured text in a format ready for surface realization.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:TEXT STRUCTURING_4 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Ordered Content: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a sentence or short paragraph) that presents all the information about Brandon Carter.\n- Requirements: Do not omit any data or add any information not present in the input. Ensure the structure is suitable for the next stage of surface realization. \nAdditional Instruction: - Combine the two data points into a single, logically structured sentence or short paragraph.\n- Begin with Brandon Carter's professional field, then state what he is known for.\n- Ensure all information is included and clearly presented.\n- Do not add, omit, or alter any facts from the input data.\n- Output the structured text in a format ready for surface realization.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Brandon_Carter | professionalField | General_relativity\n    Brandon_Carter | knownFor | Carter_constant\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_4 ===##\nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Structured Content: \n<paragraph>\n  <snt>\n    Brandon_Carter | professionalField | General_relativity\n    Brandon_Carter | knownFor | Carter_constant\n  </snt>\n</paragraph>\n- No prior guardrail feedback requiring changes.\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph.\n- Requirements: Do not omit any information or add any details not present in the input data. Ensure the output is clear, readable, and suitable for end-user consumption.', instruction='- Transform the structured content into a well-formed English sentence or short paragraph.\n- Begin by stating Brandon Carter's professional field, then mention what he is known for.\n- Ensure all information from the input is included and presented clearly.\n- Do not add, omit, or alter any facts from the input data.\n- Output should be fluent, coherent, and free of grammatical errors.')",
            "rationale": "The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is accurate and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and clear instructions to ensure the final output is grammatically correct, coherent, and does not omit or hallucinate any information. \nInstruction:\n- Transform the structured content into a well-formed English sentence or short paragraph.\n- Begin by stating Brandon Carter's professional field, then mention what he is known for.\n- Ensure all information from the input is included and presented clearly.\n- Do not add, omit, or alter any facts from the input data.\n- Output should be fluent, coherent, and free of grammatical errors."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Structured Content: \n<paragraph>\n  <snt>\n    Brandon_Carter | professionalField | General_relativity\n    Brandon_Carter | knownFor | Carter_constant\n  </snt>\n</paragraph>\n- No prior guardrail feedback requiring changes.\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph.\n- Requirements: Do not omit any information or add any details not present in the input data. Ensure the output is clear, readable, and suitable for end-user consumption. \nAdditional Instruction: - Transform the structured content into a well-formed English sentence or short paragraph.\n- Begin by stating Brandon Carter's professional field, then mention what he is known for.\n- Ensure all information from the input is included and presented clearly.\n- Do not add, omit, or alter any facts from the input data.\n- Output should be fluent, coherent, and free of grammatical errors.",
            "agent_output": "Brandon Carter works in the field of general relativity and is known for the Carter constant.",
            "rationale": "Brandon Carter works in the field of general relativity and is known for the Carter constant."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that the structured content is accurate and complete. The next step in the pipeline is surface realization, where the structured content will be transformed into fluent, natural language text. I will provide the original data, the structured content, and clear instructions to ensure the final output is grammatically correct, coherent, and does not omit or hallucinate any information. \nInstruction:\n- Transform the structured content into a well-formed English sentence or short paragraph.\n- Begin by stating Brandon Carter's professional field, then mention what he is known for.\n- Ensure all information from the input is included and presented clearly.\n- Do not add, omit, or alter any facts from the input data.\n- Output should be fluent, coherent, and free of grammatical errors. \n\nWorker Input: - Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Structured Content: \n<paragraph>\n  <snt>\n    Brandon_Carter | professionalField | General_relativity\n    Brandon_Carter | knownFor | Carter_constant\n  </snt>\n</paragraph>\n- No prior guardrail feedback requiring changes.\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph.\n- Requirements: Do not omit any information or add any details not present in the input data. Ensure the output is clear, readable, and suitable for end-user consumption.', instruction='- Transform the structured content into a well-formed English sentence or short paragraph.\n- Begin by stating Brandon Carter's professional field, then mention what he is known for.\n- Ensure all information from the input is included and presented clearly.\n- Do not add, omit, or alter any facts from the input data.\n- Output should be fluent, coherent, and free of grammatical errors. \n\nWorker Output: Brandon Carter works in the field of general relativity and is known for the Carter constant.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "Generate a response to the provided objective as if you are responding to the original user.\n\n*** Input Context ***\n\nCOMPLETED STEPS: ##=== BEGIN:TEXT STRUCTURING_1 ===##\n-- AGENT TYPE: text structuring\n-- AGENT NAME: text structuring\n-- INPUT START --\n- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Ordered Content: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- No prior guardrail feedback requiring changes.\n- Task: Structure the ordered content into a clear, organized textual format (e.g., a sentence or short paragraph) that presents all the information about Brandon Carter.\n- Requirements: Do not omit any data or add any information not present in the input. Ensure the structure is suitable for the next stage of surface realization. \nAdditional Instruction: - Combine the two data points into a single, logically structured sentence or short paragraph.\n- Begin with Brandon Carter's professional field, then state what he is known for.\n- Ensure all information is included and clearly presented.\n- Do not add, omit, or alter any facts from the input data.\n- Output the structured text in a format ready for surface realization.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Brandon_Carter | professionalField | General_relativity\n    Brandon_Carter | knownFor | Carter_constant\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:TEXT STRUCTURING_1 ===##\n\n##=== BEGIN:SURFACE REALIZATION_2 ===##\n-- AGENT TYPE: surface realization\n-- AGENT NAME: surface realization\n-- INPUT START --\n- Original Data: ['Brandon_Carter | professionalField | General_relativity', 'Brandon_Carter | knownFor | Carter_constant']\n- Structured Content: \n<paragraph>\n  <snt>\n    Brandon_Carter | professionalField | General_relativity\n    Brandon_Carter | knownFor | Carter_constant\n  </snt>\n</paragraph>\n- No prior guardrail feedback requiring changes.\n- Task: Convert the structured content into a fluent, grammatically correct, and natural-sounding sentence or short paragraph.\n- Requirements: Do not omit any information or add any details not present in the input data. Ensure the output is clear, readable, and suitable for end-user consumption. \nAdditional Instruction: - Transform the structured content into a well-formed English sentence or short paragraph.\n- Begin by stating Brandon Carter's professional field, then mention what he is known for.\n- Ensure all information from the input is included and presented clearly.\n- Do not add, omit, or alter any facts from the input data.\n- Output should be fluent, coherent, and free of grammatical errors.\n-- INPUT END --\n-- OUTPUT START --\nBrandon Carter works in the field of general relativity and is known for the Carter constant.\n-- OUTPUT END --\nFinalizer Agent: Carefully review the output provided above by the surface realization agent. Edit and refine the text as a human would, ensuring maximum fluency, semantic adequacy, coherence, and naturalness. Your task is to produce the best possible final text, correcting any errors or awkwardness if present.\n##=== END:SURFACE REALIZATION_2 ===##\n\n*** Output Format ***\nFinal Answer: \n",
            "agent_output": "Brandon Carter works in the field of general relativity and is known for the Carter constant.",
            "rationale": null
        }
    ]
}