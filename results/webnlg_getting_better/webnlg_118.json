{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOutput: ",
    "final_response": "Aleksandr Prudnikov was born on February 24, 1989, and was part of the youth club at FC Spartak Moscow. FC Spartak Moscow plays its home games at Otkrytiye Arena.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: \nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOutput: \n\nRESULT STEPS: \n\nFEEDBACK: \n\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOutput: \nFEEDBACK: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback.\nYour task is to organize the provided data into a logical order that would make for a coherent and natural narrative. Ensure that all facts are included and that the order supports a smooth flow for subsequent text generation. Do not omit or add any information.', instruction='- Arrange the facts so that the resulting narrative will be clear and logical.\n- Typically, start with the main entity (Aleksandr Prudnikov), provide personal details (birth date), then career/youth club, and finally details about the club (its ground).\n- Output the ordered list of facts, ready for the next stage.')",
            "rationale": "The user has provided a set of RDF triples in the WebNLG format, and requests a fluent, complete, and accurate text that covers all the information without hallucination or omission. No prior pipeline steps or guardrail feedback are present, so the process must begin at the first stage: Content Ordering. The data includes Aleksandr Prudnikov's birth date, his youth club (FC Spartak Moscow), and the ground of that club (Otkrytiye Arena). The logical narrative would likely start with Aleksandr Prudnikov, mention his birth date, then his youth club, and finally provide information about the club's ground. I will assign the 'content ordering' worker to organize these facts into a logical sequence for text generation."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback.\nYour task is to organize the provided data into a logical order that would make for a coherent and natural narrative. Ensure that all facts are included and that the order supports a smooth flow for subsequent text generation. Do not omit or add any information. Additional Instruction: - Arrange the facts so that the resulting narrative will be clear and logical.\n- Typically, start with the main entity (Aleksandr Prudnikov), provide personal details (birth date), then career/youth club, and finally details about the club (its ground).\n- Output the ordered list of facts, ready for the next stage.",
            "agent_output": [
                "Aleksandr_Prudnikov | birthDate | 1989-02-24",
                "Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow",
                "FC_Spartak_Moscow | ground | Otkrytiye_Arena"
            ],
            "rationale": [
                "Aleksandr_Prudnikov | birthDate | 1989-02-24",
                "Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow",
                "FC_Spartak_Moscow | ground | Otkrytiye_Arena"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided a set of RDF triples in the WebNLG format, and requests a fluent, complete, and accurate text that covers all the information without hallucination or omission. No prior pipeline steps or guardrail feedback are present, so the process must begin at the first stage: Content Ordering. The data includes Aleksandr Prudnikov's birth date, his youth club (FC Spartak Moscow), and the ground of that club (Otkrytiye Arena). The logical narrative would likely start with Aleksandr Prudnikov, mention his birth date, then his youth club, and finally provide information about the club's ground. I will assign the 'content ordering' worker to organize these facts into a logical sequence for text generation.\n\n                                Worker Input: Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback.\nYour task is to organize the provided data into a logical order that would make for a coherent and natural narrative. Ensure that all facts are included and that the order supports a smooth flow for subsequent text generation. Do not omit or add any information.', instruction='- Arrange the facts so that the resulting narrative will be clear and logical.\n- Typically, start with the main entity (Aleksandr Prudnikov), provide personal details (birth date), then career/youth club, and finally details about the club (its ground).\n- Output the ordered list of facts, ready for the next stage.\n\n                                Worker Output: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: \nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOutput: \n\nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback.\nYour task is to organize the provided data into a logical order that would make for a coherent and natural narrative. Ensure that all facts are included and that the order supports a smooth flow for subsequent text generation. Do not omit or add any information.', instruction='- Arrange the facts so that the resulting narrative will be clear and logical.\n- Typically, start with the main entity (Aleksandr Prudnikov), provide personal details (birth date), then career/youth club, and finally details about the club (its ground).\n- Output the ordered list of facts, ready for the next stage.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:WORKER_2 ===##\n-- AGENT TYPE: worker\n-- AGENT NAME: content ordering\n-- INPUT START --\nOriginal Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback.\nYour task is to organize the provided data into a logical order that would make for a coherent and natural narrative. Ensure that all facts are included and that the order supports a smooth flow for subsequent text generation. Do not omit or add any information. Additional Instruction: - Arrange the facts so that the resulting narrative will be clear and logical.\n- Typically, start with the main entity (Aleksandr Prudnikov), provide personal details (birth date), then career/youth club, and finally details about the club (its ground).\n- Output the ordered list of facts, ready for the next stage.\n-- INPUT END --\n-- OUTPUT START --\n['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\n-- OUTPUT END --\n##=== END:WORKER_2 ===##\n\nFEEDBACK: \n\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOutput: \nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOrdered Facts: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback requiring correction.\nYour task is to structure these ordered facts into a clear and organized textual format, such as a paragraph or list, ensuring that all information is included and logically connected. Do not omit or add any information.', instruction='- Organize the ordered facts into a coherent paragraph or list.\n- Ensure each fact is clearly presented and logically connected to the others.\n- Do not omit any information or introduce new content.\n- Prepare the structured text for the next stage of surface realization.')",
            "rationale": "The content ordering stage has been completed and validated as correct by the guardrail feedback. The facts are logically ordered, starting with Aleksandr Prudnikov's birth date, followed by his youth club, and then the club's ground. The next step is to move to the text structuring stage, where these ordered facts will be organized into a coherent textual structure, such as a paragraph, ensuring all information is included and clearly presented. There are no outstanding issues or feedback requiring correction, so I will proceed to the 'text structuring' worker."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOrdered Facts: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback requiring correction.\nYour task is to structure these ordered facts into a clear and organized textual format, such as a paragraph or list, ensuring that all information is included and logically connected. Do not omit or add any information. Additional Instruction: - Organize the ordered facts into a coherent paragraph or list.\n- Ensure each fact is clearly presented and logically connected to the others.\n- Do not omit any information or introduce new content.\n- Prepare the structured text for the next stage of surface realization.",
            "agent_output": "<paragraph>\n  <snt>\n    Aleksandr_Prudnikov | birthDate | 1989-02-24\n    Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow\n  </snt>\n  <snt>\n    FC_Spartak_Moscow | ground | Otkrytiye_Arena\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    Aleksandr_Prudnikov | birthDate | 1989-02-24\n    Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow\n  </snt>\n  <snt>\n    FC_Spartak_Moscow | ground | Otkrytiye_Arena\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed and validated as correct by the guardrail feedback. The facts are logically ordered, starting with Aleksandr Prudnikov's birth date, followed by his youth club, and then the club's ground. The next step is to move to the text structuring stage, where these ordered facts will be organized into a coherent textual structure, such as a paragraph, ensuring all information is included and clearly presented. There are no outstanding issues or feedback requiring correction, so I will proceed to the 'text structuring' worker.\n\n                                Worker Input: Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOrdered Facts: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback requiring correction.\nYour task is to structure these ordered facts into a clear and organized textual format, such as a paragraph or list, ensuring that all information is included and logically connected. Do not omit or add any information.', instruction='- Organize the ordered facts into a coherent paragraph or list.\n- Ensure each fact is clearly presented and logically connected to the others.\n- Do not omit any information or introduce new content.\n- Prepare the structured text for the next stage of surface realization.\n\n                                Worker Output: <paragraph>\n  <snt>\n    Aleksandr_Prudnikov | birthDate | 1989-02-24\n    Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow\n  </snt>\n  <snt>\n    FC_Spartak_Moscow | ground | Otkrytiye_Arena\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: \nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOutput: \n\nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOrdered Facts: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback requiring correction.\nYour task is to structure these ordered facts into a clear and organized textual format, such as a paragraph or list, ensuring that all information is included and logically connected. Do not omit or add any information.', instruction='- Organize the ordered facts into a coherent paragraph or list.\n- Ensure each fact is clearly presented and logically connected to the others.\n- Do not omit any information or introduce new content.\n- Prepare the structured text for the next stage of surface realization.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:WORKER_4 ===##\n-- AGENT TYPE: worker\n-- AGENT NAME: text structuring\n-- INPUT START --\nOriginal Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOrdered Facts: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nNo prior pipeline results or guardrail feedback requiring correction.\nYour task is to structure these ordered facts into a clear and organized textual format, such as a paragraph or list, ensuring that all information is included and logically connected. Do not omit or add any information. Additional Instruction: - Organize the ordered facts into a coherent paragraph or list.\n- Ensure each fact is clearly presented and logically connected to the others.\n- Do not omit any information or introduce new content.\n- Prepare the structured text for the next stage of surface realization.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Aleksandr_Prudnikov | birthDate | 1989-02-24\n    Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow\n  </snt>\n  <snt>\n    FC_Spartak_Moscow | ground | Otkrytiye_Arena\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:WORKER_4 ===##\n\nFEEDBACK: \n\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOutput: \nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nStructured Content: \n<paragraph>\n  <snt>\n    Aleksandr_Prudnikov | birthDate | 1989-02-24\n    Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow\n  </snt>\n  <snt>\n    FC_Spartak_Moscow | ground | Otkrytiye_Arena\n  </snt>\n</paragraph>\nNo prior pipeline results or guardrail feedback requiring correction.\nYour task is to generate fluent, natural, and grammatically correct text that expresses all the information in the structured content. Do not omit any facts or add any information not present in the data. Ensure the text is clear, coherent, and ready for final output.', instruction='- Convert the structured content into a fluent, natural-sounding paragraph.\n- Ensure all facts are included and clearly expressed.\n- Do not add or omit any information.\n- Make sure the text is grammatically correct and easy to read.\n- Prepare the output for final review.')",
            "rationale": "The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that all information is included, logically organized, and no fields are omitted or hallucinated. According to the workflow policy, I should now proceed to the next stage, which is surface realization. The surface realization worker will be provided with the structured content and is expected to generate fluent, natural, and grammatically correct text that accurately reflects all the information from the original data, without omission or addition."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nStructured Content: \n<paragraph>\n  <snt>\n    Aleksandr_Prudnikov | birthDate | 1989-02-24\n    Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow\n  </snt>\n  <snt>\n    FC_Spartak_Moscow | ground | Otkrytiye_Arena\n  </snt>\n</paragraph>\nNo prior pipeline results or guardrail feedback requiring correction.\nYour task is to generate fluent, natural, and grammatically correct text that expresses all the information in the structured content. Do not omit any facts or add any information not present in the data. Ensure the text is clear, coherent, and ready for final output. Additional Instruction: - Convert the structured content into a fluent, natural-sounding paragraph.\n- Ensure all facts are included and clearly expressed.\n- Do not add or omit any information.\n- Make sure the text is grammatically correct and easy to read.\n- Prepare the output for final review.",
            "agent_output": "Aleksandr Prudnikov was born on February 24, 1989, and was part of the youth club at FC Spartak Moscow. FC Spartak Moscow plays its home games at Otkrytiye Arena.",
            "rationale": "Aleksandr Prudnikov was born on February 24, 1989, and was part of the youth club at FC Spartak Moscow. FC Spartak Moscow plays its home games at Otkrytiye Arena."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that all information is included, logically organized, and no fields are omitted or hallucinated. According to the workflow policy, I should now proceed to the next stage, which is surface realization. The surface realization worker will be provided with the structured content and is expected to generate fluent, natural, and grammatically correct text that accurately reflects all the information from the original data, without omission or addition.\n\n                                Worker Input: Original Data: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nStructured Content: \n<paragraph>\n  <snt>\n    Aleksandr_Prudnikov | birthDate | 1989-02-24\n    Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow\n  </snt>\n  <snt>\n    FC_Spartak_Moscow | ground | Otkrytiye_Arena\n  </snt>\n</paragraph>\nNo prior pipeline results or guardrail feedback requiring correction.\nYour task is to generate fluent, natural, and grammatically correct text that expresses all the information in the structured content. Do not omit any facts or add any information not present in the data. Ensure the text is clear, coherent, and ready for final output.', instruction='- Convert the structured content into a fluent, natural-sounding paragraph.\n- Ensure all facts are included and clearly expressed.\n- Do not add or omit any information.\n- Make sure the text is grammatically correct and easy to read.\n- Prepare the output for final review.\n\n                                Worker Output: Aleksandr Prudnikov was born on February 24, 1989, and was part of the youth club at FC Spartak Moscow. FC Spartak Moscow plays its home games at Otkrytiye Arena.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['Aleksandr_Prudnikov | birthDate | 1989-02-24', 'Aleksandr_Prudnikov | youthclub | FC_Spartak_Moscow', 'FC_Spartak_Moscow | ground | Otkrytiye_Arena']\nOutput: ",
            "agent_output": "Aleksandr Prudnikov was born on February 24, 1989, and was part of the youth club at FC Spartak Moscow. FC Spartak Moscow plays its home games at Otkrytiye Arena.",
            "rationale": null
        }
    ]
}