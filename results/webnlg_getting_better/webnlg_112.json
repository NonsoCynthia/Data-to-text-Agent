{
    "user_prompt": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\nOutput: ",
    "final_response": "Bananaman was broadcast by the BBC and starred Bill Oddie. The show last aired on April 15, 1986. The BBC is located at Broadcasting House.",
    "next_agent": "orchestrator",
    "next_agent_payload": "You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\nOutput: ",
    "review": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
    "iteration_count": 9,
    "max_iteration": 60,
    "history_of_steps": [
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: \nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\nOutput: \n\nRESULT STEPS: \n\nFEEDBACK: \n\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\nOutput: \nFEEDBACK: \n\nASSIGNMENT: \n",
            "agent_output": "content ordering(input='Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nNo prior pipeline results or guardrail feedback.\n\nYour task is to organize these data points into a logical order that would make sense for a coherent narrative. Ensure that all information is included and that the sequence will support a clear and natural text structure in the next stage. Do not omit or add any information.', instruction='- Review all data points and determine a logical order for presenting them in a narrative.\n- Group related facts together (e.g., all facts about Bananaman, then about BBC, or vice versa).\n- Ensure the order supports a smooth transition for the next stage (Text Structuring).\n- Do not omit or invent any information.')",
            "rationale": "The user has provided a set of RDF-style triples from the WebNLG dataset and requests a fluent, complete, and accurate text that covers all the information without hallucination or omission. The pipeline must begin with Content Ordering, as per the workflow policy. There is no prior output or guardrail feedback, so the first step is to organize the data into a logical narrative sequence. I will assign the 'content ordering' worker, providing the original data and clear instructions to arrange the information for optimal narrative flow."
        },
        {
            "agent_name": "content ordering",
            "agent_input": "Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nNo prior pipeline results or guardrail feedback.\n\nYour task is to organize these data points into a logical order that would make sense for a coherent narrative. Ensure that all information is included and that the sequence will support a clear and natural text structure in the next stage. Do not omit or add any information. Additional Instruction: - Review all data points and determine a logical order for presenting them in a narrative.\n- Group related facts together (e.g., all facts about Bananaman, then about BBC, or vice versa).\n- Ensure the order supports a smooth transition for the next stage (Text Structuring).\n- Do not omit or invent any information.",
            "agent_output": [
                "Bananaman | broadcastedBy | BBC",
                "Bananaman | starring | Bill_Oddie",
                "Bananaman | lastAired | \"1986-04-15\"",
                "BBC | city | Broadcasting_House"
            ],
            "rationale": [
                "Bananaman | broadcastedBy | BBC",
                "Bananaman | starring | Bill_Oddie",
                "Bananaman | lastAired | \"1986-04-15\"",
                "BBC | city | Broadcasting_House"
            ]
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The user has provided a set of RDF-style triples from the WebNLG dataset and requests a fluent, complete, and accurate text that covers all the information without hallucination or omission. The pipeline must begin with Content Ordering, as per the workflow policy. There is no prior output or guardrail feedback, so the first step is to organize the data into a logical narrative sequence. I will assign the 'content ordering' worker, providing the original data and clear instructions to arrange the information for optimal narrative flow.\n\n                                Worker Input: Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nNo prior pipeline results or guardrail feedback.\n\nYour task is to organize these data points into a logical order that would make sense for a coherent narrative. Ensure that all information is included and that the sequence will support a clear and natural text structure in the next stage. Do not omit or add any information.', instruction='- Review all data points and determine a logical order for presenting them in a narrative.\n- Group related facts together (e.g., all facts about Bananaman, then about BBC, or vice versa).\n- Ensure the order supports a smooth transition for the next stage (Text Structuring).\n- Do not omit or invent any information.\n\n                                Worker Output: ['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: \nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\nOutput: \n\nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_1 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ncontent ordering(input='Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nNo prior pipeline results or guardrail feedback.\n\nYour task is to organize these data points into a logical order that would make sense for a coherent narrative. Ensure that all information is included and that the sequence will support a clear and natural text structure in the next stage. Do not omit or add any information.', instruction='- Review all data points and determine a logical order for presenting them in a narrative.\n- Group related facts together (e.g., all facts about Bananaman, then about BBC, or vice versa).\n- Ensure the order supports a smooth transition for the next stage (Text Structuring).\n- Do not omit or invent any information.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_1 ===##\n\n##=== BEGIN:WORKER_2 ===##\n-- AGENT TYPE: worker\n-- AGENT NAME: content ordering\n-- INPUT START --\nOriginal Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nNo prior pipeline results or guardrail feedback.\n\nYour task is to organize these data points into a logical order that would make sense for a coherent narrative. Ensure that all information is included and that the sequence will support a clear and natural text structure in the next stage. Do not omit or add any information. Additional Instruction: - Review all data points and determine a logical order for presenting them in a narrative.\n- Group related facts together (e.g., all facts about Bananaman, then about BBC, or vice versa).\n- Ensure the order supports a smooth transition for the next stage (Text Structuring).\n- Do not omit or invent any information.\n-- INPUT END --\n-- OUTPUT START --\n['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n-- OUTPUT END --\n##=== END:WORKER_2 ===##\n\nFEEDBACK: \n\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\nOutput: \nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "text structuring(input='Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nOrdered Content: \n['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n\nNo prior pipeline results or guardrail feedback for this stage.\n\nYour task is to structure the ordered content into a clear and organized textual format (such as a paragraph or a list). Ensure that all information is included, grouped logically, and that the structure will support fluent and coherent surface realization in the next stage. Do not omit or add any information.', instruction='- Use the ordered content to create a structured text outline (e.g., a paragraph or bullet points).\n- Group related facts together for clarity.\n- Ensure the structure is logical and complete, with no missing or invented information.\n- Prepare the output so it is ready for the final surface realization stage.')",
            "rationale": "The content ordering stage has been completed and validated as correct by the guardrail feedback. The next step in the pipeline is Text Structuring. I will now assign the 'text structuring' worker to take the logically ordered data and organize it into a clear textual structure, such as paragraphs or lists, ensuring all information is included and ready for fluent surface realization. I will provide the original data, the ordered content, and clear instructions to avoid omission or hallucination."
        },
        {
            "agent_name": "text structuring",
            "agent_input": "Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nOrdered Content: \n['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n\nNo prior pipeline results or guardrail feedback for this stage.\n\nYour task is to structure the ordered content into a clear and organized textual format (such as a paragraph or a list). Ensure that all information is included, grouped logically, and that the structure will support fluent and coherent surface realization in the next stage. Do not omit or add any information. Additional Instruction: - Use the ordered content to create a structured text outline (e.g., a paragraph or bullet points).\n- Group related facts together for clarity.\n- Ensure the structure is logical and complete, with no missing or invented information.\n- Prepare the output so it is ready for the final surface realization stage.",
            "agent_output": "<paragraph>\n  <snt>\n    Bananaman | broadcastedBy | BBC\n    Bananaman | starring | Bill_Oddie\n    Bananaman | lastAired | \"1986-04-15\"\n  </snt>\n  <snt>\n    BBC | city | Broadcasting_House\n  </snt>\n</paragraph>",
            "rationale": "<paragraph>\n  <snt>\n    Bananaman | broadcastedBy | BBC\n    Bananaman | starring | Bill_Oddie\n    Bananaman | lastAired | \"1986-04-15\"\n  </snt>\n  <snt>\n    BBC | city | Broadcasting_House\n  </snt>\n</paragraph>"
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The content ordering stage has been completed and validated as correct by the guardrail feedback. The next step in the pipeline is Text Structuring. I will now assign the 'text structuring' worker to take the logically ordered data and organize it into a clear textual structure, such as paragraphs or lists, ensuring all information is included and ready for fluent surface realization. I will provide the original data, the ordered content, and clear instructions to avoid omission or hallucination.\n\n                                Worker Input: Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nOrdered Content: \n['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n\nNo prior pipeline results or guardrail feedback for this stage.\n\nYour task is to structure the ordered content into a clear and organized textual format (such as a paragraph or a list). Ensure that all information is included, grouped logically, and that the structure will support fluent and coherent surface realization in the next stage. Do not omit or add any information.', instruction='- Use the ordered content to create a structured text outline (e.g., a paragraph or bullet points).\n- Group related facts together for clarity.\n- Ensure the structure is logical and complete, with no missing or invented information.\n- Prepare the output so it is ready for the final surface realization stage.\n\n                                Worker Output: <paragraph>\n  <snt>\n    Bananaman | broadcastedBy | BBC\n    Bananaman | starring | Bill_Oddie\n    Bananaman | lastAired | \"1986-04-15\"\n  </snt>\n  <snt>\n    BBC | city | Broadcasting_House\n  </snt>\n</paragraph>\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "orchestrator",
            "agent_input": "USER REQUEST: \nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\nOutput: \n\nRESULT STEPS: ##=== BEGIN:ORCHESTRATOR_3 ===##\n-- AGENT TYPE: orchestrator\n-- AGENT NAME: orchestrator\n-- SIGNAL: FINISH\n-- RESPONSE START --\ntext structuring(input='Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nOrdered Content: \n['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n\nNo prior pipeline results or guardrail feedback for this stage.\n\nYour task is to structure the ordered content into a clear and organized textual format (such as a paragraph or a list). Ensure that all information is included, grouped logically, and that the structure will support fluent and coherent surface realization in the next stage. Do not omit or add any information.', instruction='- Use the ordered content to create a structured text outline (e.g., a paragraph or bullet points).\n- Group related facts together for clarity.\n- Ensure the structure is logical and complete, with no missing or invented information.\n- Prepare the output so it is ready for the final surface realization stage.')\n-- RESPONSE END --\n##=== END:ORCHESTRATOR_3 ===##\n\n##=== BEGIN:WORKER_4 ===##\n-- AGENT TYPE: worker\n-- AGENT NAME: text structuring\n-- INPUT START --\nOriginal Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nOrdered Content: \n['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n\nNo prior pipeline results or guardrail feedback for this stage.\n\nYour task is to structure the ordered content into a clear and organized textual format (such as a paragraph or a list). Ensure that all information is included, grouped logically, and that the structure will support fluent and coherent surface realization in the next stage. Do not omit or add any information. Additional Instruction: - Use the ordered content to create a structured text outline (e.g., a paragraph or bullet points).\n- Group related facts together for clarity.\n- Ensure the structure is logical and complete, with no missing or invented information.\n- Prepare the output so it is ready for the final surface realization stage.\n-- INPUT END --\n-- OUTPUT START --\n<paragraph>\n  <snt>\n    Bananaman | broadcastedBy | BBC\n    Bananaman | starring | Bill_Oddie\n    Bananaman | lastAired | \"1986-04-15\"\n  </snt>\n  <snt>\n    BBC | city | Broadcasting_House\n  </snt>\n</paragraph>\n-- OUTPUT END --\n##=== END:WORKER_4 ===##\n\nFEEDBACK: \n\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\nOutput: \nFEEDBACK: CORRECT\n\nASSIGNMENT: \n",
            "agent_output": "surface realization(input='Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nOrdered Content: \n['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n\nStructured Text:\n<paragraph>\n  <snt>\n    Bananaman | broadcastedBy | BBC\n    Bananaman | starring | Bill_Oddie\n    Bananaman | lastAired | \"1986-04-15\"\n  </snt>\n  <snt>\n    BBC | city | Broadcasting_House\n  </snt>\n</paragraph>\n\nNo prior guardrail feedback for this stage.\n\nYour task is to generate a fluent, coherent, and natural-sounding paragraph that accurately expresses all the information from the structured text. Do not omit any facts or add any information not present in the data. Ensure the text is clear, readable, and free from grammatical errors.', instruction='- Convert the structured content into a well-formed paragraph.\n- Ensure all facts are included and clearly expressed.\n- Avoid repetition, awkward phrasing, or hallucination.\n- The final text should be fluent, accurate, and easy to read.')",
            "rationale": "The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that all information is present, logically grouped, and ready for surface realization. According to the workflow policy, I must now proceed to the next stage, which is surface realization. I will provide the surface realization worker with the original data, the ordered content, the structured text, and clear instructions to generate a fluent, coherent, and accurate final text that covers all data points without omission or hallucination."
        },
        {
            "agent_name": "surface realization",
            "agent_input": "Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nOrdered Content: \n['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n\nStructured Text:\n<paragraph>\n  <snt>\n    Bananaman | broadcastedBy | BBC\n    Bananaman | starring | Bill_Oddie\n    Bananaman | lastAired | \"1986-04-15\"\n  </snt>\n  <snt>\n    BBC | city | Broadcasting_House\n  </snt>\n</paragraph>\n\nNo prior guardrail feedback for this stage.\n\nYour task is to generate a fluent, coherent, and natural-sounding paragraph that accurately expresses all the information from the structured text. Do not omit any facts or add any information not present in the data. Ensure the text is clear, readable, and free from grammatical errors. Additional Instruction: - Convert the structured content into a well-formed paragraph.\n- Ensure all facts are included and clearly expressed.\n- Avoid repetition, awkward phrasing, or hallucination.\n- The final text should be fluent, accurate, and easy to read.",
            "agent_output": "Bananaman was broadcast by the BBC and starred Bill Oddie. The show last aired on April 15, 1986. The BBC is located at Broadcasting House.",
            "rationale": "Bananaman was broadcast by the BBC and starred Bill Oddie. The show last aired on April 15, 1986. The BBC is located at Broadcasting House."
        },
        {
            "agent_name": "guardrail",
            "agent_input": "\n\nWorker: Orchestrator Thought: The text structuring stage has been completed and received a 'CORRECT' evaluation from the guardrail, indicating that all information is present, logically grouped, and ready for surface realization. According to the workflow policy, I must now proceed to the next stage, which is surface realization. I will provide the surface realization worker with the original data, the ordered content, the structured text, and clear instructions to generate a fluent, coherent, and accurate final text that covers all data points without omission or hallucination.\n\n                                Worker Input: Original Data: \n['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\n\nOrdered Content: \n['Bananaman | broadcastedBy | BBC', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'BBC | city | Broadcasting_House']\n\nStructured Text:\n<paragraph>\n  <snt>\n    Bananaman | broadcastedBy | BBC\n    Bananaman | starring | Bill_Oddie\n    Bananaman | lastAired | \"1986-04-15\"\n  </snt>\n  <snt>\n    BBC | city | Broadcasting_House\n  </snt>\n</paragraph>\n\nNo prior guardrail feedback for this stage.\n\nYour task is to generate a fluent, coherent, and natural-sounding paragraph that accurately expresses all the information from the structured text. Do not omit any facts or add any information not present in the data. Ensure the text is clear, readable, and free from grammatical errors.', instruction='- Convert the structured content into a well-formed paragraph.\n- Ensure all facts are included and clearly expressed.\n- Avoid repetition, awkward phrasing, or hallucination.\n- The final text should be fluent, accurate, and easy to read.\n\n                                Worker Output: Bananaman was broadcast by the BBC and starred Bill Oddie. The show last aired on April 15, 1986. The BBC is located at Broadcasting House.\n\nKeep your reply concise, avoid repetition, and use the following format:\nFEEDBACK:\n",
            "agent_output": "=== GUARDRAIL REVIEW (surface realization) ===\n[Fluency & Grammar]: CORRECT\n[Faithfulness & Adequacy]: CORRECT\n[Coherence & Naturalness]: CORRECT\nOVERALL: CORRECT",
            "rationale": "Evaluation of worker output."
        },
        {
            "agent_name": "finalizer",
            "agent_input": "\nUSER: You are an agent designed to generate text from data for a data-to-text natural language generation. \nYou can be provided data in the form of xml, table, meaning representations, graphs etc.\nYour task is to generate the appropriate text given the data information without omitting any field or adding extra information in essence called hallucination.\n\nDataset: webnlg\n\nHere is the data, now generate text using the provided data:\n\nData: ['BBC | city | Broadcasting_House', 'Bananaman | starring | Bill_Oddie', 'Bananaman | lastAired | \"1986-04-15\"', 'Bananaman | broadcastedBy | BBC']\nOutput: ",
            "agent_output": "Bananaman was broadcast by the BBC and starred Bill Oddie. The show last aired on April 15, 1986. The BBC is located at Broadcasting House.",
            "rationale": null
        }
    ]
}